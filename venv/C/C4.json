{
    "Write a C program to print string 'helloworld' using pointer ": "#include<stdio.h>\nint main()\n{\n    char str[25];\n    scanf(\"%s\",str);\n    printf(\"The entered string is :: %s\",str);\n    return 0;\n}",
    "write a C program for  modulo operator using pointer. ": "#include<stdio.h>\nint main()\n{\n    int x,y;\n    scanf(\"%d %d\",&x,&y);\n    printf(\"Modulo = %d\",x%y);\n    return 0;\n}",
    "Write a C program to test whether a number is positive, negative, or equal to zero using pointers": "#include<stdio.h>\nint main()\n{\n    int x;\n    scanf(\"%d\",&x);\n    if(x>0)\n        printf(\"the number is Positive\");\n    else\n        printf(\"the number is negative\");\n    return 0;\n}",
    "Write a C program to check whether the number 1333 is even number or odd number using pointers. ": "#include<stdio.h>\nint main()\n{\n  int num, rem;\n  int *pnum;\n  pnum= &num;\n\n \n  scanf(\"%d\",pnum); //pnum has address of num\n\n  rem= *pnum % 2;\n\n  if(rem==0)\n    printf(\"%d is even.\\n\", *pnum);\n\n  else\n    printf(\"%d is odd.\\n\", *pnum);\n\n  return 0;\n}",
    "write a C program to find factorial of the number  '3' using pointer:": "# include <stdio.h>\nint  main( )\n{\nint  num, fact=1 ;\nint  *pn, *pf ;\n\nscanf(\"%d\",&num) ;\n\npn = & num ;\npf = & fact ;\n\ndo\n{\n*pf = ( *pf ) * ( *pn ) ;\n*pn = *pn - 1 ;\n}while(  *pn > 0) ;\nprintf(\"Factorial of entered number is : %d \",*pf) ;\nreturn 0;\n}",
    "Write a C program to print string 'COMPUTER' using pointer ": "#include <stdio.h>\nint main()\n{\n    char str[100];\n    char *ptr;\n\n    \n    scanf(\"%s\",str);\n\n    //assign address of str to ptr\n    ptr=str;\n\n    printf(\"The entered string is :: \");\n\n    while(*ptr!='\\0')\n        printf(\"%c\",*ptr++);\n\n    return 0;\n}",
    "Write a C program to subtract two  integer numbers using pointers.": "#include <stdio.h>\nint main()\n{\n  int num1,num2,sum=0.0;\n  int *pnum1=&num1,*pnum2=&num2,*psum=&sum;\n  scanf(\"%d %d\",pnum1,pnum2);\n  *psum=*pnum1 - *pnum2;\n  printf(\"%d - %d = %d\",*pnum1,*pnum2,*psum);\n  return 0;\n}",
    " Write a C program to convert a 100.50 into 100 using pointer": "#include<stdio.h>\nint main()\n{\n    float fnum, *pfnum=&fnum;\n    int num, *pnum=&num;\n    scanf(\"%f\",&fnum);\n    *pnum=(int)*pfnum;\n    printf(\"the integer equivalent of %.2f =%d\",*pfnum,*pnum);\n    return 0;\n}",
    "Write a C program to swap the three values m = 20, n = 45, 0 = 65 using function pointers ( without temporary variable) ": "#include<stdio.h>\nint main()\n{\n    int m=20,n=45,o=65;\n    int* ptr1=&o;\n    int* ptr2=&m;\n    int* ptr3=&n;\n    printf(\"m is %d, n is %d, o is %d\\n\",m,n,o);\n    printf(\"m is %d, n is %d, o is %d\",*ptr1,*ptr2,*ptr3);\n    return 0;\n}",
    "Write a C program to calculate the Product of first 12 natural numbers using Recursion": "#include <stdio.h>\nint productNNumbers(int n)\n{\n    if(n == 1)\n        return 1;\n    return(n * productNNumbers(n-1));\n}\nint main()\n{\n    int n=12, result = 1;\n    result = productNNumbers(n);\n    printf(\"Product is = %d\",result);\n    return 0;\n}",
    "For example:": "#include<stdio.h>\nint main()\n{\n    float x,y;\n    scanf(\"%f %f\",&x,&y);\n    float* b=&x;\n    float* h=&y;\n    float area=(x*y)/2;\n    printf(\"area of the triangle with base %.6f and height%.6f=%.6f\",*b,*h,area);\n    return 0;\n}",
    "write a program to find sum of digits of 12224 using recursion?": "#include <stdio.h>\nint sum_of_digit(int n)\n{\n\tif (n == 0)\n\treturn 0;\n\treturn (n % 10 + sum_of_digit(n / 10));\n}\nint main()\n{\n\tint num = 12224;\n\tint result = sum_of_digit(num);\n\tprintf(\"Sum of digits of %d = %d\\n\", num, result);\n\treturn 0;\n}",
    "Write a C program to swap any three values using function pointers (using a temporary variable) ": "#include<stdio.h>\nvoid swap(int *n1,int* n2,int* n3)\n{\n    int temp;\n    temp = *n1;\n    *n1 = *n2;\n    *n2 = *n3;\n    *n3 = temp;\n}\nint main()\n{\n    int a,b,c;\n    scanf(\"%d %d %d\",&a,&b,&c);\n    printf(\"m is %d, n is %d, o is %d\\n\",a,b,c);\n    swap(&a,&b,&c);\n    printf(\"m is %d, n is %d, o is %d\",a,b,c);\n    return 0;\n}",
    "Write a C program to calculate the power using recursion": "#include <stdio.h>\nint power(int n1, int n2);\nint main() {\n    int base, a, result;\n    scanf(\"%d\", &base);\n    scanf(\"%d\", &a);\n    result = power(base, a);\n    printf(\"%d^%d = %d\", base, a, result);\n    return 0;\n}\n\nint power(int base, int a) {\n    if(a!=0)\n        return(base*power(base,a-1));\n    else\n        return 1;\n}",
    "write a program to print odd/even numbers in given range based on lower limit value/starting value using recursion.": "#include <stdio.h>\nvoid printEvenOdd(int cur, int limit);\nint main()\n{\n    int lowerLimit, upperLimit;\n    scanf(\"%d\", &lowerLimit);\n    scanf(\"%d\", &upperLimit);\n    printf(\"Even/odd Numbers from %d to %d are: \", lowerLimit, upperLimit);\n    printEvenOdd(lowerLimit, upperLimit); \n    return 0;\n}\nvoid printEvenOdd(int cur, int limit)\n{\n    if(cur>limit)\n        return;\n    printf(\"%d \",cur);\n    return printEvenOdd(cur + 2, limit);\n}",
    "write a program to find 222122 number is palindrome or not using recursion?": "#include <stdio.h>\n\n#include <math.h>\n\nint reverse(int num);\n\nint isPalindrome(int num);\n\nint main()\n\n{\n\n    int num=222122;\n\n    if(isPalindrome(num) == 1)\n\n    {\n\n        printf(\"%d is palindrome number.\\n\", num);\n\n    }\n\n    else\n\n    {\n\n        printf(\"%d is NOT palindrome number.\\n\", num);\n\n    }\n\n    \n\n    return 0;\n\n}\n\nint isPalindrome(int num)\n{\n    if(num == reverse(num))\n    {\n        return 1;\n\n    }\n    return 0;\n}\n\nint reverse(int num)\n{\n    int rem;\n    static int sum=0;\n    if(num!=0)\n    {\n        rem=num%10;\n        sum=sum*10+rem;\n        reverse(num/10);\n    }\n    else\n        return sum;\n    return sum;\n}",
    "Write a C Program to find the maximum element in each row of a matrix": "#include <stdio.h>\nint main()\n{\n    int matrix[10][10];\n    int num_rows, num_cols;\n    int i, j, max;\n    scanf(\"%d %d\", &num_rows, &num_cols);\n    for (i = 0; i < num_rows; i++)\n    {\n        for (j = 0; j < num_cols; j++)\n        {\n            scanf(\"%d\", &matrix[i][j]);\n        }\n    }\n    for (i = 0; i < num_rows; i++)\n    {\n        max = matrix[i][0];\n        for (j = 1; j < num_cols; j++)\n        {\n            if (matrix[i][j] > max)\n            {\n                max = matrix[i][j];\n            }\n        }\n        printf(\"Maximum element of the row %d is: %d\\n\",i+1,max);\n    }\n    return 0;\n}",
    "Input": "#include <stdio.h>\nint main()\n{\n    int matrix[10][10];\n    int num_rows, num_cols;\n    int i, j;\n    scanf(\"%d %d\", &num_rows, &num_cols);\n    for (i = 0; i < num_rows; i++)\n    {\n        for (j = 0; j < num_cols; j++)\n        {\n            scanf(\"%d\", &matrix[i][j]);\n        }\n    }\n    printf(\"The Diagonal Elements of a Matrix = \");\n    for (i = 0; i < num_rows; i++)\n    {\n        printf(\"%d \",matrix[i][i]);\n    }\n    return 0;\n}",
    "Write a C Program to displays the upper and lower triangular and its sums of a matrix": "#include<stdio.h>\nint main()\n{\n    int mat[10][10];\n    int i, j, size, upper = 0, lower = 0,row,col;\n    scanf(\"%d%d\", &row,&col);\n    size=row;\n    for(i = 0; i < size; i++)\n    {\n        for(j = 0; j < size; j++)\n        {\n            scanf(\"%d\", &mat[i][j]);\n        }\n    }\n    printf(\"matrix is\\n\");\n    for(i = 0; i < size; i++)\n    {\n        for(j = 0; j < size; j++)\n        {\n            printf(\"%d \", mat[i][j]);\n        }\n        printf(\"\\n\");\n    }\n    printf(\"\\n\");\n    \n    for(i = 0; i < size; i++)\n    {\n        for(j = 0; j < size; j++)\n        {\n            if(j <= i)\n            {\n                printf(\"%d \", mat[i][j]);\n                lower = lower + mat[i][j];\n            }\n            else\n            printf(\" \");\n        }\n        printf(\"\\n\");\n    }\n    printf(\"Sum of Lower Triangle is %d\\n\\n\\n\", lower);\n    \n    for(i = 0; i < size; i++)\n    {\n        for(j = 0; j < size; j++)\n        {\n            if(i <= j)\n            {\n                printf(\"%d \", mat[i][j]);\n                upper = upper + mat[i][j];\n            }\n        }\n        printf(\"\\n\");\n    }\n    printf(\"Sum of Upper Triangle is %d\\n\",upper);\n    return 0;\n}",
    "Write a C program to enter elements in two matrices[2x2] and check whether both matrices are equal or not.": "#include <stdio.h>\nint main()\n{\n    int mat1[2][2];\n    int mat2[2][2];\n    int flag=0;\n    for(int i=0;i<2;i++)\n    {\n        for(int j=0;j<2;j++)\n        {\n            scanf(\"%d\",&mat1[i][j]);\n        }\n    }\n    for(int i=0;i<2;i++)\n    {\n        for(int j=0;j<2;j++)\n        {\n            scanf(\"%d\",&mat2[i][j]);\n        }\n    }\n    for(int i=0;i<2;i++)\n    {\n        for(int j=0;j<2;j++)\n        {\n            if(mat1[i][j]==mat2[i][j])\n                flag=0;\n            else\n                flag=1;\n        }\n    }\n    if(flag==0)\n        printf(\"Matrix A is equal to Matrix B (A==B)\");\n    else\n        printf(\"Matrix A is not equal to Matrix B (A!=B)\");\n    return 0;\n}\n",
    "Write a C Program to print the sum of the upper and lower triangular of a matrix": "#include<stdio.h>\nint main()\n{\n    int mat[10][10];\n    int i, j, size, upper = 0, lower = 0,row,col;\n    scanf(\"%d%d\", &row,&col);\n    size=row;\n    for(i = 0; i < size; i++)\n    {\n        for(j = 0; j < size; j++)\n        {\n            scanf(\"%d\", &mat[i][j]);\n        }\n    }\n    printf(\"matrix is\\n\");\n    for(i = 0; i < size; i++)\n    {\n        for(j = 0; j < size; j++)\n        {\n            printf(\"%d \", mat[i][j]);\n        }\n        printf(\"\\n\");\n    }\n    printf(\"\\n\");\n    \n    for(i = 0; i < size; i++)\n    {\n        for(j = 0; j < size; j++)\n        {\n            if(j <= i)\n            {\n                lower = lower + mat[i][j];\n            }\n        }\n    }\n    printf(\"Sum of Lower Triangle is %d\\n\", lower);\n    \n    for(i = 0; i < size; i++)\n    {\n        for(j = 0; j < size; j++)\n        {\n            if(i <= j)\n            {\n                upper = upper + mat[i][j];\n            }\n        }\n    }\n    printf(\"Sum of Upper Triangle is %d\",upper);\n    return 0;\n}",
    "Input:": "/*\n * C Program to check if a Matrix is a Sparse Matrix\n */\n#include <stdio.h>\n \nint main ()\n{\n    int matrix[10][10];\n    int i, j, m, n;\n    int sparse_counter = 0;\n \n    //printf(\"Enter the order of the matix \\n\");\n    scanf(\"%d %d\", &m, &n);\n    //printf(\"Enter the elements of the matix \\n\");\n    for (i = 0; i < m; ++i)\n    {\n        for (j = 0; j < n; ++j)\n        {\n            scanf(\"%d\", &matrix[i][j]);\n            if (matrix[i][j] == 0)\n            {\n                ++sparse_counter;\n            }\n        }\n    }\n    if (sparse_counter >> ((m * n) / 2))\n    {\n        printf(\"The given matrix is Sparse Matrix\\n\");\n    }\n    else\n        printf(\"The given matrix is not a Sparse Matrix \\n\");\n    printf(\"There are %d number of Zeros\", sparse_counter);\n}",
    "Write a C program to read elements in a matrix [3X3] and perform scalar multiplication of the matrix. ": "/**\n * C program to perform scalar matrix multiplication\n */\n \n#include <stdio.h>\n\n#define SIZE 3 // Maximum size of the array\n\nint main()\n{\n    int A[SIZE][SIZE]; \n    int num, row, col;\n\n    /* Input elements in matrix from user */\n    //printf(\"Enter elements in matrix of size %dx%d: \\n\", SIZE, SIZE);\n    for(row=0; row<SIZE; row++)\n    {\n        for(col=0; col<SIZE; col++)\n        {\n            scanf(\"%d\", &A[row][col]);\n        }\n    }\n\n    /* Input multiplier from user */\n   // printf(\"Enter any number to multiply with matrix A: \");\n    scanf(\"%d\", &num);\n\n    /* Perform scalar multiplication of matrix */\n    for(row=0; row<SIZE; row++)\n    {\n        for(col=0; col<SIZE; col++)\n        {\n            /* (cAij) = c . Aij */\n            A[row][col] = num * A[row][col];\n        }\n    }\n\n    /* Print result of scalar multiplication of matrix */\n    //printf(\"\\nResultant matrix c.A = \\n\");\n    for(row=0; row<SIZE; row++)\n    {\n        for(col=0; col<SIZE; col++)\n        {\n            printf(\"%d \", A[row][col]);\n        }\n        printf(\"\\n\");\n    }\n\n    return 0;\n}",
    "Write a C Program to displays the lower triangular and its sum of a matrix": "#include<stdio.h>\nint main()\n{\n    int mat[10][10];\n    int i, j, size, lower = 0,row,col;\n    scanf(\"%d%d\", &row,&col);\n    size=row;\n    for(i = 0; i < size; i++)\n    {\n        for(j = 0; j < size; j++)\n        {\n            scanf(\"%d\", &mat[i][j]);\n        }\n    }\n    printf(\"matrix is\\n\");\n    for(i = 0; i < size; i++)\n    {\n        for(j = 0; j < size; j++)\n        {\n            printf(\"%d \", mat[i][j]);\n        }\n        printf(\"\\n\");\n    }\n    printf(\"\\n\");\n    \n    for(i = 0; i < size; i++)\n    {\n        for(j = 0; j < size; j++)\n        {\n            if(j <= i)\n            {\n                printf(\"%d \", mat[i][j]);\n                lower = lower + mat[i][j];\n            }\n            else\n            printf(\" \");\n        }\n        printf(\"\\n\");\n    }\n    printf(\"Sum of Lower Triangle is %d\", lower);\n    return 0;\n}",
    "Write a C Program to displays the upper and lower triangular of a matrix": "#include<stdio.h>\nint main()\n{\n    int mat[10][10];\n    int i, j, size,row,col;\n    scanf(\"%d%d\", &row,&col);\n    size=row;\n    for(i = 0; i < size; i++)\n    {\n        for(j = 0; j < size; j++)\n        {\n            scanf(\"%d\", &mat[i][j]);\n        }\n    }\n    printf(\"matrix is\\n\");\n    for(i = 0; i < size; i++)\n    {\n        for(j = 0; j < size; j++)\n        {\n            printf(\"%d \", mat[i][j]);\n        }\n        printf(\"\\n\");\n    }\n    printf(\"\\n\");\n    \n    for(i = 0; i < size; i++)\n    {\n        for(j = 0; j < size; j++)\n        {\n            if(j <= i)\n            {\n                printf(\"%d \", mat[i][j]);\n            }\n            else\n            printf(\" \");\n        }\n        printf(\"\\n\");\n    }\n    printf(\"\\n\\n\");\n    \n    for(i = 0; i < size; i++)\n    {\n        for(j = 0; j < size; j++)\n        {\n            if(i <= j)\n            {\n                printf(\"%d \", mat[i][j]);\n            }\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}",
    "Write a program in C to count total number of alphabets, digits and special characters in a string. ": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\nint main()\n{\n    char str[100];\n    int alp, digit, splch, i;\n    alp = digit = splch = i = 0;\n    scanf(\"%[^\\n]%*c\",str);\n    while(str[i]!='\\0')\n    {\n        if((str[i]>='a' && str[i]<='z') || (str[i]>='A' && str[i]<='Z'))\n        {\n            alp++;\n        }\n        else if(str[i]>='0' && str[i]<='9')\n        {\n            digit++;\n        }\n        else\n        {\n            splch++;\n        }\n\n        i++;\n    }\n\n    printf(\"Number of Alphabets in the string is : %d\\n\", alp);\n    printf(\"Number of Digits in the string is : %d\\n\", digit);\n    printf(\"Number of Special characters in the string is : %d\\n\\n\", splch);\n}\n",
    "Write a program in C to check whether a character is digit or not without using built-in function.": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char str[25];\n    scanf(\"%s\",str);\n    for(int i=0;i<strlen(str);i++)\n    {\n        if(str[i]>='0' && str[i]<='9')\n            printf(\"the given character is digit: %s\",str);\n        else\n            printf(\"the given character is not digit: %s\",str);\n    }\n    return 0;\n}",
    "Write a C program to concatenate the two strings using pointers.": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char str1[25],str2[25];\n    scanf(\"%s %s\",str1,str2);\n    char* ptr=strcat(str1,str2);\n    printf(\"After concatenation the strings are\\n%s\",ptr);\n    return 0;\n}",
    "Write C program for the below pyramid string pattern.": "#include<stdio.h>\nint main()\n{\n    char str[20];\n    int n, a=0;\n    scanf(\"%[^\\n]\", str);\n    scanf(\"%d\", &n);\n    for(int i=0;i<=n;i++)\n    {\n        for(int j=0;j<=n-i;j++) \n            printf(\" \");\n        for(int k=0;k<=i;k++)\n        {\n            printf(\"%2c\", str[a++]);\n               if(str[a]=='\\0') a=0;\n         }\n        printf(\"\\n\");\n    }\n    return 0;\n}",
    "Create a C Program to delete the duplicate words in the string.": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\nint main()\n{\n    char str[64];\n    char words[6][16];\n    int i = 0,j = 0,k = 0,l = 0;\n    scanf(\"%[^\\n]s\", str);\n    while (str[i] != 0)\n    {\n        if (str[i] == ' ')\n        {\n            words[k][j] = '\\0';\n            k++;\n            j = 0;\n        }\n        else\n        {\n            words[k][j] = str[i];\n            j++;\n        }\n        i++;\n    }\n    words[k][j] = '\\0';\n    j = 0;\n    for (i = 0; i < k; i++)\n    {\n        int present = 0;\n        for (l = 1; l < k + 1; l++)\n        {\n            if (words[l][j] == '\\0' || l == i)\n                continue;\n            if (strcmp(words[i], words[l]) == 0)\n            {\n                words[l][j] = '\\0';\n                present = present + 1;\n            }\n        }\n    }\n    j = 0;\n    printf(\"Result is:\\n\");\n    for (i = 0; i < k + 1; i++)\n    {\n        if (words[i][j] == 0)\n            continue;\n        else\n            printf(\"%s \", words[i]);\n    }\n    return 0;\n}",
    "Write a program in C to count total number of digits in a string using built-in functions. ": "#include <stdio.h>\n#include <string.h>\n#include <ctype.h>\nint main()\n{\n    char str[100];\n    int i, count = 0;\n    fgets(str, sizeof(str), stdin);\n\n    for(i = 0; i < strlen(str); i++) {\n        if(isdigit(str[i])) {\n            count++;\n        }\n    }\n    printf(\"Number of Digits in the string is : %d\\n\", count);\n    return 0;\n}",
    "Write a program to find a substring within a string. If found display its starting position.": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    char str[100], substr[100];\n    int i, j, flag = 0;\n    fgets(str, 100, stdin);\n    fgets(substr, 100, stdin);\n    for(i = 0; i <= strlen(str) - strlen(substr); i++)\n    {\n        for(j = 0; j < strlen(substr); j++)\n        {\n            if(str[i + j] != substr[j])\n            {\n                break;\n            }\n        }\n        if(j == strlen(substr))\n        {\n            printf(\"Substring found at position %d\\n\", i+1);\n            flag = 1;\n            break;\n        }\n    }\n    if(flag == 0)\n    {\n        printf(\"Substring not found\");\n    }\n    return 0;\n}",
    "Write a program in C to print all the alphabets using pointer.": "#include<stdio.h>\nint main()\n{\n    printf(\"The Alphabets are : \\n\");\n    for(int i=65;i<=90;i++)\n        printf(\" %c \",i);\n    return 0;\n}",
    "Write a program in C to replace the spaces of a string with a specific character.": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char str[50];\n    fgets(str,sizeof(str),stdin);\n    printf(\"After replacing the space with  @ the new string is :\\n\");\n    for(int i=0;i<strlen(str);i++)\n    {\n        if(str[i]==' ')\n            str[i]='@';\n    }\n    printf(\"%s\",str);\n    return 0;\n}",
    "Write a program in C to find the largest and smallest word in a string \"Saveetha Engineering College\"..": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    char str[] = \"Welcome to Saveetha Engineering College\";\n    char word[20], smallest[20], largest[20];\n    int i,start = 0, len, smallest_len = strlen(str), largest_len = 0;\n    for(i = 0; str[i] != '\\0'; i++)\n    {\n        if(str[i] == ' ')\n        {\n            len = i - start;\n            strncpy(word, &str[start], len);\n            word[len] = '\\0';\n            if(len < smallest_len)\n            {\n                smallest_len = len;\n                strcpy(smallest, word);\n            }\n            if(len > largest_len)\n            {\n                largest_len = len;\n                strcpy(largest, word);\n            }\n            start = i + 1;\n        }\n    }\n    len = i - start;\n    strncpy(word, &str[start], len);\n    word[len] = '\\0';\n    if(len < smallest_len)\n    {\n        strcpy(smallest, word);\n    }\n    if(len > largest_len)\n    {\n        strcpy(largest, word);\n    }\n    printf(\"The largest word is \\'%s\\'\\n\", largest);\n    printf(\"and the smallest word is \\'%s\\'\\n\", smallest);\n    printf(\"in the string : \\'%s\\'.\",str);\n    return 0;\n}",
    "Write a program in C to find the number of times a given word 'the' appears in the given string.": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\nint main()\n{\n    char str[100];\n    int ctr=0,i,freq=0;\n    int t,h,e,spc;\n\tscanf(\"%[^\\n]%*c\", str);\n    ctr=strlen(str);\n\n\t/*Counts the frequency of the word 'the' with a trailing space*/\n\tfor(i=0;i<=ctr-3;i++)\n\t{\n\t\t//Add your code here\n\t\tt=(str[i]=='t'||str[i]=='T');\n\t\th=(str[i+1]=='h'||str[i+1]=='H');\n\t\te=(str[i+2]=='e'||str[i+2]=='E');\n\t\tspc=(str[i+3]==' '||str[i+3]=='\\0');\n\t\tif ((t&&h&&e&&spc)==1)\n\t\t   freq++;\n\t}\n\tprintf(\"The frequency of the word \\'the\\' is : %d\\n\\n\",freq);\n}",
    "Write a program in C to check whether a character is Hexadecimal Digit or not.": "#include<stdio.h>\n#include<ctype.h>\n\nint main()\n{\n\tchar TestChar;\n\t// Hexadecimal Digits are a-f, A-F or 0-9\n    scanf( \"%c\", &TestChar );\n\tif(isdigit(TestChar))\n\t\tprintf( \"The entered character is a hexadecimal digit. \\n\" );\n\telse\n\t\tprintf( \"The entered character is not a hexadecimal digit. \\n\" );\n\treturn 0;\n}",
    "Write a c program to find the sum of even digits using for loop in a Given range": "#include<stdio.h>\nint main()\n{\n    int x,y,sum=0;\n    scanf(\"%d %d\",&x,&y);\n    for(int i=x;i<=y;i++)\n    {\n        if(i%2==0)\n        {\n            printf(\"%d  \",i);\n            sum+=i;\n        }\n    }\n    printf(\"\\n\");\n    printf(\"%d\",sum);\n    return 0;\n}",
    "Write a C Program to Find the Multiplication of two m*n matrix": "#include<stdio.h>\nint main()\n{\n    int r1,c1,r2,c2;\n    scanf(\"%d %d %d %d\",&r1,&c1,&r2,&c2);\n    int mat1[10][10],mat2[10][10];\n    int mul[10][10];\n    for(int i=0;i<r1;i++)\n    {\n        for(int j=0;j<c1;j++)\n        {\n            scanf(\"%d\",&mat1[i][j]);\n        }\n    }\n    for(int i=0;i<r1;i++)\n    {\n        for(int j=0;j<c1;j++)\n        {\n            scanf(\"%d\",&mat2[i][j]);\n        }\n    }\n    if(r1==c1 && r2==c2)\n    {\n        printf(\"Product of the matrices:\\n\");\n        for(int i=0;i<r1;i++)\n        {\n            for(int j=0;j<c1;j++)\n            {\n                mul[i][j]=0;\n                for(int k=0;k<c1;k++)\n                {\n                    mul[i][j]+=mat1[i][k]*mat2[k][j];\n                }\n            }\n        }\n        for(int i=0;i<r1;i++)\n        {\n            for(int j=0;j<c1;j++)\n            {\n                printf(\"%d \",mul[i][j]);\n            }\n            printf(\"\\n\");\n        }\n    }\n    else\n    {\n        printf(\"The multiplication isn't possible.\"); \n    }\n    return 0;\n}",
    "write a c program to find factorial of the number  '6' using pointer:": "#include<stdio.h>\nint main()\n{\n    int n,fact=1;\n    scanf(\"%d\",&n);\n    int* ptr=&n;\n    for(int i=1;i<=*ptr;i++)\n    {\n        fact=fact*i;\n    }\n    printf(\"Factorial of entered number is : %d\",fact);\n    return 0;\n}",
    "Write a C program to calculate the power for 8,4 using recursion.": "#include<stdio.h>\nint power(int base,int a)\n{\n    if(a==0)\n        return 1;\n    else\n        return base*power(base,a-1);\n}\nint main()\n{\n    int base=8,a=4;\n    int result = power(base,a);\n    printf(\"%d^%d = %d\",base,a,result);\n    return 0;\n}"
}