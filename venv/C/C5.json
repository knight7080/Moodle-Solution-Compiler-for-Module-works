{
    "For example:": "#include<stdio.h>\nstruct Customer\n{\n    int id,uc;\n    char name[25];\n    int gbill,rate,tot,subs;\n};\nint main()\n{\n    struct Customer cus;\n    scanf(\"%d %s %d\",&cus.id,cus.name,&cus.uc);\n    if(cus.uc<=50)\n    {\n        cus.rate=10;\n        cus.tot=cus.uc*cus.rate+50;\n        cus.subs=cus.tot*0.1;\n        cus.gbill=cus.tot-cus.subs;\n    }\n    else if(cus.uc>50 && cus.uc<=100)\n    {    \n        cus.rate=20;\n        cus.tot=cus.uc*cus.rate+50;\n        cus.subs=cus.tot*0.1;\n        cus.gbill=cus.tot-cus.subs-450;\n    }   \n    else\n    {\n        cus.rate=30;\n        cus.tot=cus.uc*cus.rate+50;\n        cus.subs=cus.tot*0.1;\n        cus.gbill=cus.tot-cus.subs-1350;\n    }\n    printf(\"Bill_amount=%d\",cus.gbill);\n}",
    "Write a C program to find character 'V' is vowel or consonant using pointer.": "#include<stdio.h>\nint main()\n{\n    char str;\n    scanf(\"%c\",&str);\n    char* ch=&str;\n    if(*ch=='A' || *ch=='E' || *ch=='I' || *ch=='O' ||*ch=='U')\n        printf(\"%c is vowel.\",*ch);\n    else\n        printf(\"%c is consonant.\",*ch);\n    return 0;\n}",
    "Write a c program to read and display an array of any 3 integer elements using pointer ": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int arr[n];\n    for(int i=0;i<n;i++)\n        scanf(\"%d\",&arr[i]);\n    for(int i=0;i<n;i++)\n    {\n        printf(\"the elements are %d\\n\",arr[i]);\n    }\n    return 0;\n}",
    "Write a program in C to print any 2 elements of an array  in reverse order using pointer.": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int arr[n];\n    for(int i=0;i<n;i++)\n        scanf(\"%d\",&arr[i]);\n    for(int i=n-1;i>=0;i--)\n    {\n        printf(\"element - %d : %d  \",i+1,arr[i]);\n    }\n    return 0;\n}",
    "Write a C program to find area of rectangle using pointer": "#include<stdio.h>\nint main()\n{\n    int x,y;\n    scanf(\"%d %d\",&x,&y);\n    int* b=&x;\n    int* h=&y;\n    float area=(*b)*(*h);\n    printf(\"Area of rectangle = %.6f sq. units\",area);\n    return 0;\n}",
    "Write a C program to find character 'I' is vowel or consonant using pointer.": "#include<stdio.h>\nint main()\n{\n    char str;\n    scanf(\"%c\",&str);\n    if(str=='A' || str=='E' || str=='I' || str=='O' || str=='U')\n        printf(\"%c is Vowel.\",str);\n    else\n        printf(\"%c is consonant.\",str);\n    return 0;\n}",
    "Write a c program to read and display an array of any 6 integer elements using pointer ": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int arr[n];\n    for(int i=0;i<n;i++)\n        scanf(\"%d\",&arr[i]);\n    for(int i=0;i<n;i++)\n    {\n        printf(\"the elements are %d\\n\",arr[i]);\n    }\n    return 0;\n}",
    "Write a C program to print values 25,30,35  using malloc() and free().": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int* values = (int*) malloc(3 * sizeof(int));\n    values[0] = 25;\n    values[1] = 30;\n    values[2] = 35;\n    printf(\"%d\\n\", values[0]);\n    printf(\"%d\\n\", values[1]);\n    printf(\"%d\\n\", values[2]);\n    free(values);\n    return 0;\n}",
    "Write a C program to check 67543 is even or odd using calloc().": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int* ptr=(int*)calloc(1,sizeof(int));\n    *ptr=67543;\n    if(*ptr%2==0)\n        printf(\"%d is Even Number\",*ptr);\n    else\n        printf(\"%d is Odd Number\",*ptr);\n    return 0;\n}",
    "Write a C program to add value 200.5 to list which already have 100.0, 20.0  in that  using realloc() and print all value in the list.": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    float* ptr=(float*)malloc(2*sizeof(float));\n    ptr[0]=100.00;\n    ptr[1]=20.0;\n    ptr=(float*)realloc(ptr,3*sizeof(float));\n    ptr[2]=200.5;\n    printf(\"%.6f %.6f %.6f\",ptr[0],ptr[1],ptr[2]);\n    return 0;\n}",
    "Write a C program to  find average of three integer  numbers using pointers in which memory allocated using calloc(). ": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\nint main()\n{\n    int* values=(int*)calloc(3,sizeof(int));\n    scanf(\"%d %d %d\",&*values,&*values+1,&*values+2);\n    int* ptr=values;\n    float sum=0;\n    for(int i=0;i<3;i++)\n    {\n        sum+=*ptr;\n        ptr++;\n    }\n    float avg=round(sum/3);\n    printf(\"The average is %d\",(int)avg);\n    return 0;\n}",
    "Write a C program to count total number of even elements in an array using calloc().": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int n, i, count = 0;\n    int *arr;\n    scanf(\"%d\", &n);\n    arr = (int*)calloc(n, sizeof(int));\n    for (i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &arr[i]);\n    }\n    for (i = 0; i < n; i++)\n    {\n        if (arr[i] % 2 == 0)\n        {\n            count++;\n        }\n    }\n    printf(\"Total even elements: %d\\n\", count);\n    free(arr);\n    return 0;\n}",
    "Write a C program to Print 'Hello' using malloc() and free() .": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    char* ptr=(char*)malloc(25*sizeof(char));\n    ptr=\"Hello\";\n    printf(\"%s\",ptr);\n    return 0;\n}",
    "Write a C program to check given input  is Equal to Zero or not using calloc().": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int* ptr=(int*)calloc(1,sizeof(int));\n    scanf(\"%d\",&*ptr);\n    if(*ptr==0)\n        printf(\"Given input is zero\");\n    else\n        printf(\"Given input is not zero\");\n    return 0;\n}",
    "Write a C program to add value 'H' , 'A' to list which already have S,A,V,E,E,T  in that  using realloc() and print all value in the list.": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    char* ptr=(char*)malloc(6*sizeof(char));\n    ptr[0]='S';\n    ptr[1]='A';\n    ptr[2]='V';\n    ptr[3]='E';\n    ptr[4]='E';\n    ptr[5]='T';\n    ptr=(char*)realloc(ptr,8*sizeof(char));\n    ptr[6]='H';\n    ptr[7]='A';\n    for(int i=0;i<8;i++)\n        printf(\"%c \",ptr[i]);\n    return 0;\n}",
    "Write a C program to add three floating point numbers using pointers in which memory allocated using calloc(). ": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    float sum=0;\n    float* numbers=(float*)calloc(3,sizeof(float));\n    scanf(\"%f %f %f\",numbers,numbers+1,numbers+2);\n    float* ptr=numbers;\n    for(int i=0;i<3;i++)\n    {\n        sum+=*ptr;\n        ptr++;\n    }\n    printf(\"%.3f\",sum);\n    return 0;\n}",
    "Write a C program to count total number of even elements in an array  using calloc().": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int n, i, count = 0;\n    int *arr;\n    scanf(\"%d\", &n);\n    arr = (int*)calloc(n, sizeof(int));\n    for (i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &arr[i]);\n    }\n    for (i = 0; i < n; i++)\n    {\n        if (arr[i] % 2 == 0)\n        {\n            count++;\n        }\n    }\n    printf(\"Total even elements: %d\\n\", count);\n    free(arr);\n    return 0;\n}",
    "Write a C program to print two values 300,400,500,600,700  using malloc() and free().": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int* ptr=(int*)malloc(5*sizeof(ptr));\n    ptr[0]=300;\n    ptr[1]=400;\n    ptr[2]=500;\n    ptr[3]=600;\n    ptr[4]=700;\n    for(int i=0;i<5;i++)\n        printf(\"%d\\n\",ptr[i]);\n    return 0;\n}",
    "Write a C program to add 23.1 and 32 using calloc().": "#include<stdio.h>\n\n#include<stdlib.h>\n\nint main()\n\n{\n\n     float* ptr;\n     int *ptr1;\n     int n=1;\n\n     ptr = (float*)calloc(n , sizeof(float));\n      ptr1 = (int*)calloc(n , sizeof(int));\n\n     *ptr=23.100000;\n     *ptr1=32;\n     float s=*ptr+*ptr1;\n     printf(\"Sum is %f\",s);\n\n}",
    "Write a C program to add value 20.21,32.67 to list which already have 12.33,67.44,89.55  in that  using realloc() and print that value.": "#include<stdio.h>\n\n#include<stdlib.h>\n\nint main()\n\n{\n\n     float* ptr,*ptr_new;\n    \n\n     ptr = (float*)malloc(5*sizeof(float));\n\n     ptr[0]=12.330000;\n     ptr[1]=67.440000;\n     ptr[2]=89.550000;\n     ptr_new=(float*)realloc(ptr,5*sizeof(float));\n     ptr_new[3]= 20.210000;\n     ptr_new[4]=32.670000;\n     for(int i=0;i<5;i++)\n\n     printf(\"%.2f \",ptr_new[i]);\n\n}\n",
    "Write a C program to  find average of two integer  numbers using pointers in which memory allocated using malloc(). ": "#include <stdio.h>\n#include <stdlib.h>\n#include<math.h>\nint main()\n{\n    float sum = 0;\n    float* numbers = (float*) calloc(2, sizeof(float));\n    scanf(\"%f %f\", numbers, numbers+1);\n    float* ptr = numbers;\n    for (int i = 0; i < 2; i++)\n    {\n        sum += *ptr;\n        ptr++;\n    }\n    float average = round(sum / 2);\n    printf(\"The average is %d\", (int)average);\n    free(numbers);\n    return 0;\n}\n",
    "C program to add two distances in feet and inches using structure": "#include<stdio.h>\nstruct dist{\n    int x,y;\n};\nint main()\n{\n    struct dist d1,d2;\n    scanf(\"%d %d\",&d1.x,&d1.y);\n    scanf(\"%d %d\",&d2.x,&d2.y);\n    int feet=d1.x+d2.x;\n    int inch=d1.y+d2.y;\n    while(inch>=12)\n    {\n        inch-=12;\n        feet++;\n    }\n    printf(\"Total distance- Feet: %d, Inches: %d\",feet,inch);\n    return 0;\n}",
    "C program to store and display the name, id, age and salary of an employee using structure(using array of structure)": "#include<stdio.h>\nstruct employee{\n    int id,age,salary;\n    char name[25];\n};\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    struct employee emp[n];\n    printf(\"Employee Details\\n\");\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d %s %d %d\",&emp[i].id,emp[i].name,&emp[i].age,&emp[i].salary);\n        printf(\"%d  %s  %d  %d\\n\",emp[i].id,emp[i].name,emp[i].age,emp[i].salary);\n    }\n    return 0;\n}",
    "Write a program to store information of Student (name,age,gender,address) using function with structure.": "#include <stdio.h>\nstruct Student {\n    char name[50];\n    int age;\n    char gender[25];\n    char address[100];\n};\nvoid readStudent(struct Student *s)\n{\n    scanf(\"%s %s %d %s\", s->name, s->gender, &s->age,  s->address);\n}\nvoid displayStudent(struct Student s)\n{\n    printf(\"Name is: %s \\nGender: %s \\nAge is: %d \\nAddress: %s \\n\", s.name, s.gender, s.age, s.address);\n}\nint main()\n{\n    struct Student s;\n    readStudent(&s);\n    displayStudent(s);\n    return 0;\n}",
    "Create a C program to read print employee details using union": "#include <stdio.h>\nunion Job {\n   float salary;\n   int workerNo;\n} j;\nint main()\n{\n    scanf(\"%f %d\",&j.salary,&j.workerNo);\n    printf(\"Salary = 0.0\\n\");\n    printf(\"Number of workers = %d\",j.workerNo);\n    return 0;\n}",
    "Create a C program to print the value of the wednesday using enumeration.": "#include <stdio.h>\nenum day {sunday, monday, tuesday, wednesday, thursday, friday, saturday};\n  \nint main()\n{\n    int day =wednesday+1;\n    printf(\"The day number stored in d is %d\", day);\n    return 0;\n}",
    "Create a C Program to store the student information and display it using structure.": "#include<stdio.h>\nstruct student{\n    char name[25];\n    int roll;\n    float mark;\n}s1;\nint main()\n{\n    scanf(\"%s %d %f\",s1.name,&s1.roll,&s1.mark);\n    printf(\"Displaying Information:\\n\");\n    printf(\"Name: %s\\n\",s1.name);\n    printf(\"Roll number: %d\\n\",s1.roll);\n    printf(\"Marks: %.1f\\n\",s1.mark);\n    return 0;\n}",
    "Create a C program to calculate employee salary using structure.": "#include <stdio.h>\nstruct employee\n{\n    char name[50];\n    int wages;\n    float days, basic_pay, hra, net_pay;\n};\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    struct employee emp[n];\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%s\", emp[i].name);\n        scanf(\"%d\", &emp[i].wages);\n        scanf(\"%f\", &emp[i].days);\n    \n        emp[i].basic_pay = emp[i].wages * emp[i].days;\n        emp[i].hra = emp[i].basic_pay * 0.12;\n        emp[i].net_pay = emp[i].basic_pay + emp[i].hra;\n    \n        printf(\"Name: %s\\n\", emp[i].name);\n        printf(\"BasicPay: %.6f\\n\",emp[i].basic_pay);\n        printf(\"HRA:%.6f\\n\",emp[i].hra);\n        printf(\"NetPay:%.6f\\n\",emp[i].net_pay);\n    }\n    return 0;\n}",
    "Write a program to store information of Books (id, name, title and subject) using function with structure.": "#include <stdio.h>\nstruct Books {\n    char name[50];\n    int id;\n    char title[25];\n    char subject[100];\n};\nvoid readBook(struct Books *s)\n{\n    scanf(\"%s %s %s %d\", s->title, s->name, s->subject, &s->id);\n}\nvoid displayBook(struct Books s)\n{\n    printf(\"Book Title is =%s\\n\",s.title);\n    printf(\"Book Name is =%s\\n\",s.name);\n    printf(\"Book Subject is =%s\\n\",s.subject);\n    printf(\"Book Id is =%d\",s.id);\n}\nint main()\n{\n    struct Books s;\n    readBook(&s);\n    displayBook(s);\n    return 0;\n}",
    "Create a  C program to print integer,character,float data using union.": "#include<stdio.h>\n#include<string.h>\nunion Data {\n   int i;\n   float f;\n   char str[25];\n}d;\nint main()\n{\n    d.i=10;\n    printf(\"data.i : %d\\n\",d.i);\n    d.f=220.500000;\n    printf(\"data.f : %f\\n\",d.f);\n    strcpy(d.str,\"C Programming\");\n    printf(\"data.str : %s\\n\",d.str);\n    return 0;\n}",
    "Create a book structure read and print the details of book.": "#include<stdio.h> \nstruct book \n{ \n    char name[50]; \n    float price; \n    int pages; \n}; \nint main()\n{\n    struct book b1;\n    scanf(\"%s %f %d\", b1.name, &b1.price, &b1.pages); \n    printf(\"And this is what you entered\\n\"); \n    printf(\"%s %.2f %3d\", b1.name, b1.price, b1.pages); \n}",
    "Create a C program to calculate the total and average of student using structure.": "#include <stdio.h>\nstruct student {\n    int subject[5];\n    int total;\n};\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    struct student s[n];\n    for(int i=0;i<n;i++)\n    {\n        s[i].total=0;\n        for(int j=0;j<5;j++)\n        {\n            scanf(\"%d\",&s[i].subject[j]);\n            s[i].total+=s[i].subject[j];\n        }\n        printf(\"%d\\n\",s[i].total);\n    }\n}",
    "Write a program to store information of Student (rollno, name, Percentage) using function with structure.": "#include<stdio.h>\nstruct student{\n    char name[25];\n    int roll;\n    float mark;\n}s1;\nint main()\n{\n    scanf(\"%d %s %f\",&s1.roll,s1.name,&s1.mark);\n    printf(\"Rollno is: %d\\n\",s1.roll);\n    printf(\"Name is: %s\\n\",s1.name);\n    printf(\"Percentage is: %.2f\\n\",s1.mark);\n    return 0;\n}",
    "Create a C program to print the  student details using union.": "#include <stdio.h>\n#include <string.h>\n\nunion student \n{\n    char name[20];\n    char subject[20];\n    float percentage;\n}record;\nint main() \n{\n    printf(\" Name       : %s \\n\", record.name);\n    printf(\" Subject    : %s \\n\", record.subject);\n    record.percentage=86.500000;\n    printf(\" Percentage : %f \\n\", record.percentage);\n    return 0;\n}",
    "Create a structure program to read(empno,dept and basic pay) and store the data of 3 employees and calculate their Gross Salary(da =10% and HRA=30% from BP);": "#include<stdio.h>\nstruct employee\n{\n    int empno,bp;\n    char dept[25];\n    int da,hra;\n    float total;\n    \n};\nint main()\n{\n    struct employee emp[3];\n    printf(\"Details of the Employee: \\n\");\n    for(int i=0;i<3;i++)\n    {\n        scanf(\"%d %s %d\",&emp[i].empno,emp[i].dept,&emp[i].bp);\n        emp[i].da=emp[i].bp*0.1;\n        emp[i].hra=emp[i].bp*0.3;\n        emp[i].total=emp[i].bp+emp[i].da+emp[i].hra;\n        printf(\"%d    %s           %d    %d    %d    %.2f \\n\",emp[i].empno,emp[i].dept,emp[i].bp,emp[i].da,emp[i].hra,emp[i].total);\n    }\n}",
    "Create a structure program to read(empno,dept & basic pay) and store the data of 3 employees and calculate their Gross Salary(da =10% and HRA=30% from BP) using nested structures;": "#include <stdio.h>\nstruct employee\n{\n    int emp_no;\n    char dept[20];\n    int basic;\n    int da;\n    int hra;\n    float gross_salary;\n};\nint main()\n{\n    struct employee e[3];\n\nfor(int i=0; i<3; i++)\n    {\nscanf(\"%d %s %d\", &e[i].emp_no, e[i].dept, &e[i].basic);\n    }\n\nfor(int i=0; i<3; i++)\n    {\n        e[i].da = (float) 10/100 * e[i].basic;\n        e[i].hra = (float) 30/100 * e[i].basic;\n        e[i].gross_salary = e[i].basic + e[i].da + e[i].hra;\n    }\n    printf(\"Details of the Employee: \\n\");\nfor(int i=0; i<3; i++)\n    {\nprintf(\"%d    %s           %d    %d    %d    %.2f\\n\", e[i].emp_no, e[i].dept, e[i].basic, e[i].da, e[i].hra, e[i].gross_salary);\n    }\n    return 0;\n}\n",
    "Write a C program to accept details of 'n' employee(eno, ename, salary) and display the details of employee having lowest salary. Use array of structure.": "#include<stdio.h>\nstruct employee\n{\n    int empno,bp;\n    char dept[25];\n    int da,hra;\n    float total;\n    \n};\nint main()\n{\n    struct employee emp[3];\n    printf(\"Details of the Employee: \\n\");\n    for(int i=0;i<3;i++)\n    {\n        scanf(\"%d %s %d\",&emp[i].empno,emp[i].dept,&emp[i].bp);\n        emp[i].da=emp[i].bp*0.1;\n        emp[i].hra=emp[i].bp*0.3;\n        emp[i].total=emp[i].bp+emp[i].da+emp[i].hra;\n        printf(\"%d    %s           %d    %d    %d    %.2f \\n\",emp[i].empno,emp[i].dept,emp[i].bp,emp[i].da,emp[i].hra,emp[i].total);\n    }\n}",
    "Write C program to accept batting information of cricket team using structure. It contains player name and runs scored by player. Calculate total runs scored by cricket team.": "#include <stdio.h>\nstruct gas_bill\n{\n    int units_consumed;\n    float subsidy;\n};\n\nstruct gas\n{\n    int cust_no;\n    char cust_name[30];\n    int tot_amount;\n    struct gas_bill bill;\n};\n\n\nint main()\n{\n    struct gas g;\nscanf(\"%d %s %d\", &g.cust_no, g.cust_name, &g.bill.units_consumed);\n\n    if(g.bill.units_consumed<= 50)\n    {\ng.tot_amount = 50 + (10 * g.bill.units_consumed);\ng.bill.subsidy = (float) 10/100 * g.tot_amount;\ng.tot_amount = g.tot_amount - g.bill.subsidy;\n    }\n\n    else if(g.bill.units_consumed> 50 &&g.bill.units_consumed<=100)\n    {\ng.tot_amount = 50 + (50 * 10) + (20 * (g.bill.units_consumed - 50));\ng.bill.subsidy = (float) 10/100 * g.tot_amount;\ng.tot_amount = g.tot_amount - g.bill.subsidy;\n    }\n\n    else\n    {\ng.tot_amount = 50 + (50 * 10) + (50 * 20) + (30 * (g.bill.units_consumed - 100));\ng.bill.subsidy = (float) 10/100 * g.tot_amount;\ng.tot_amount = g.tot_amount - g.bill.subsidy;\n    }\n    printf(\"Bill_amount=%d\", g.tot_amount);\n    return 0;\n}\n\n",
    "Create a structure for student and read the regno,name,no.of.present in the month of jun, july, aug and sep and check the eligibility for writing the examination and display the details using function(Passing structure to a function by reference(address)?": "#include<stdio.h>\nenum time{first=8,second=9,third=10,fourth=11,fifth=12};\nint main()\n{\n    printf(\"Class Timings\\n\");\n    printf(\"First Hour = %d am\\n\",first);\n    printf(\"second Hour = %d am\\n\",second);\n    printf(\"Third Hour = %d am\\n\",third);\n    printf(\"Fourth Hour = %d am\\n\",fourth);\n    printf(\"Fifth Hour = %d pm\",fifth);\n    return 0;\n}",
    "create a structure to read(customer no,name & unit consumption) and store the details of 3 gas customer and calculate the gas bill.": "#include<stdio.h>\nstruct Customer\n{\n    int id,uc;\n    char name[25];\n    int gbill,rate,tot,subs;\n};\nint main()\n{\n    struct Customer cus[3];\n    printf(\"Customer Gas Details \\n\");\n    for(int i=0;i<3;i++)\n    {\n        scanf(\"%d %s %d\",&cus[i].id,cus[i].name,&cus[i].uc);\n        if(cus[i].uc<=50)\n        {\n            cus[i].rate=10;\n            cus[i].tot=cus[i].uc*cus[i].rate+50;\n            cus[i].subs=cus[i].tot*0.1;\n            cus[i].gbill=cus[i].tot-cus[i].subs;\n        }\n        else if(cus[i].uc>50 && cus[i].uc<=100)\n        {    \n            cus[i].rate=20;\n            cus[i].tot=cus[i].uc*cus[i].rate+50;\n            cus[i].subs=cus[i].tot*0.1;\n            cus[i].gbill=cus[i].tot-cus[i].subs-450;\n        }   \n        else\n        {\n            cus[i].rate=30;\n            cus[i].tot=cus[i].uc*cus[i].rate+50;\n            cus[i].subs=cus[i].tot*0.1;\n            cus[i].gbill=cus[i].tot-cus[i].subs-1350;\n        }\n        printf(\"%d  %d  %d\\n\",cus[i].id,cus[i].uc,cus[i].gbill);\n    }\n}",
    "create a nested structure to read(customer no,name & unit consumption) and store the details of gas customer and calculate the gas bill.": "#include <stdio.h>\nstruct gas_cust\n{\n    int cust_no;\n    char cust_name[30];\n    int units_consumed;\n    float subsidy;\n    int tot_amt;\n};\n\nint main()\n{\n    struct gas_cust bill[3];\n    for(int i=0; i<3; i++)\n    {\nscanf(\"%d %s %d\", &bill[i].cust_no, bill[i].cust_name, &bill[i].units_consumed);\n    }\n\n    for(int i=0; i<3; i++)\n    {\n    if(bill[i].units_consumed<= 50)\n    {\n        bill[i].tot_amt = 50 + (10 * bill[i].units_consumed);\n        bill[i].subsidy = (float) 10/100 * bill[i].tot_amt;\n        bill[i].tot_amt = bill[i].tot_amt - bill[i].subsidy;\n    }\n\n    else if(bill[i].units_consumed> 50 && bill[i].units_consumed<=100)\n    {\n        bill[i].tot_amt = 50 + (50 * 10) + (20 * (bill[i].units_consumed - 50));\n        bill[i].subsidy = (float) 10/100 * bill[i].tot_amt;\n        bill[i].tot_amt = bill[i].tot_amt - bill[i].subsidy;\n    }\n\n    else\n    {\n        bill[i].tot_amt = 50 + (50 * 10) + (50 * 20) + (30 * (bill[i].units_consumed - 100));\n        bill[i].subsidy = (float) 10/100 * bill[i].tot_amt;\n        bill[i].tot_amt = bill[i].tot_amt - bill[i].subsidy;\n    }\n\n    }\n    printf(\"Customer Gas Details\\n\");\n    for(int i=0; i<3; i++)\n    {\n        printf(\"%d  %d  %d\\n\", bill[i].cust_no, bill[i].units_consumed, bill[i].tot_amt);\n    }\n}\n\n",
    "Write C program to read the name,daily wages and no.of.days and calculate  payment of worker declare structure variable as pointer.": "#include <stdio.h>\nstruct salary_detail\n{\n    int basic;\n    int da;\n    int hra;\n};\n\nstruct employee\n{\n    int emp_no;\n    char dept[20];\n    struct salary_detail salary;\n    float gross_salary;\n};\n\n\nint main()\n{\n    struct employee e[3];\n\nfor(int i=0; i<3; i++)\n    {\nscanf(\"%d %s %d\", &e[i].emp_no, e[i].dept, &e[i].salary.basic);\n    }\n\nfor(int i=0; i<3; i++)\n    {\n        e[i].salary.da = (float) 10/100 * e[i].salary.basic;\n        e[i].salary.hra = (float) 30/100 * e[i].salary.basic;\n        e[i].gross_salary = e[i].salary.basic + e[i].salary.da + e[i].salary.hra;\n    }\n    printf(\"Details of the Employee: \\n\");\nfor(int i=0; i<3; i++)\n    {\nprintf(\"%d    %s           %d    %d    %d    %.2f\\n\", e[i].emp_no, e[i].dept, e[i].salary.basic, e[i].salary.da, e[i].salary.hra, e[i].gross_salary);\n    }\n    return 0;\n}\n",
    "Create a structure for student and read the regno,name,no.of.present in the month of jun, july, aug and sep and check the eligibility for writing the examination and display the details using function(Passing structure to a function by value)?": "#include <stdio.h>\n#include <string.h>\n#define MAX_EMPLOYEES 100\nstruct employee\n{\n    int eno;\n    char ename[50];\n    int salary;\n};\nint main()\n{\n    struct employee employees[MAX_EMPLOYEES];\n    int n, i, lowest_salary_index;\n    int lowest_salary;\n    scanf(\"%d\", &n);\n    for (i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &employees[i].eno);\n        scanf(\"%s\", employees[i].ename);\n        scanf(\"%d\", &employees[i].salary);\n    }\n    lowest_salary = employees[0].salary;\n    lowest_salary_index = 0;\n    for (i = 1; i < n; i++)\n    {\n        if (employees[i].salary < lowest_salary)\n        {\n            lowest_salary = employees[i].salary;\n            lowest_salary_index = i;\n        }\n    }\n    printf(\"Lowest salary employee details:\");\n    printf(\"%d      \", employees[lowest_salary_index].eno);\n    printf(\"%s      \", employees[lowest_salary_index].ename);\n    printf(\"%d\", employees[lowest_salary_index].salary);\n    return 0;\n}",
    "Create a structure for eb calculation bill for 3 Customers(use customer no,prev reading & curre reading as input) using nested structure ( first 100 unit 2 Rs per unit ,101 to 200 rs.3 per unit and above 200 rs 5 per unit)": "#include<stdio.h>\nstruct cust{\n    int id,pr,cr;\n    int tot,uc;\n    float amt;\n};\nint main()\n{\n    struct cust s[3];\n    printf(\"Details of the EB Customer\\n\");\n    for(int i=0;i<3;i++)\n    {\n        scanf(\"%d %d %d\",&s[i].id,&s[i].pr,&s[i].cr);\n        s[i].uc=s[i].cr-s[i].pr;\n        if(s[i].uc<=100)\n           s[i].amt=s[i].uc*2.00;\n        else if(s[i].uc>100 && s[i].uc<=200)\n            s[i].amt=s[i].uc*3.00-100;\n        else\n            s[i].amt=s[i].uc*5.00-500;\n        printf(\"%d      %.2f\\n\",s[i].id,s[i].amt);\n    }\n    return 0;\n}",
    "Write a C program for the following pattern?": "#include<stdio.h>\nint main()\n{\n    int k=7;\n    for(int i=0;i<1;i++)\n    {\n        printf(\"%d\\n\",i);\n    }\n    for(int i=0;i<3;i++)\n    {\n        if(i==0 || i==2)\n            printf(\"%d \",k);\n        else\n            printf(\"0 \");\n    }\n    printf(\"\\n\");\n    for(int i=0;i<5;i++)\n    {\n        if(i==0 || i==4)\n            printf(\"%d \",k-1);\n        else if(i==1 || i==3)\n            printf(\"%d \",k);\n        else\n            printf(\"0 \");\n    }\n    printf(\"\\n\");\n    for(int i=0;i<7;i++)\n    {\n        if(i==0 || i==6)\n            printf(\"%d \",k-2);\n        else if(i==1 || i==5)\n            printf(\"%d \",k-1);\n        else if(i==2 || i==4)\n            printf(\"%d \",k);\n        else\n            printf(\"0 \");\n    }\n    printf(\"\\n\");\n    for(int i=0;i<9;i++)\n    {\n        if(i==0 || i==8)\n            printf(\"%d \",k-3);\n        else if(i==1 || i==7)\n            printf(\"%d \",k-2);\n        else if(i==2 || i==6)\n            printf(\"%d \",k-1);\n        else if(i==3 || i==5)\n            printf(\"%d \",k);\n        else\n            printf(\"0 \");\n    }\n    printf(\"\\n\");\n    for(int i=0;i<11;i++)\n    {\n        if(i==0 || i==10)\n            printf(\"%d \",k-4);\n        else if(i==1 || i==9)\n            printf(\"%d \",k-3);\n        else if(i==2 || i==8)\n            printf(\"%d \",k-2);\n        else if(i==3 || i==7)\n            printf(\"%d \",k-1);\n        else if(i==4 || i==6)\n            printf(\"%d \",k);\n        else\n            printf(\"0 \");\n    }\n    printf(\"\\n\");\n    for(int i=0;i<13;i++)\n    {\n        if(i==0 || i==12)\n            printf(\"%d \",k-5);\n        else if(i==1 || i==11)\n            printf(\"%d \",k-4);\n        else if(i==2 || i==10)\n            printf(\"%d \",k-3);\n        else if(i==3 || i==9)\n            printf(\"%d \",k-2);\n        else if(i==4 || i==8)\n            printf(\"%d \",k-1);\n        else if(i==5 || i==7)\n            printf(\"%d \",k);\n        else\n            printf(\"0 \");\n    }\n    printf(\"\\n\");\n    for(int i=0;i<15;i++)\n    {\n        if(i==0 || i==14)\n            printf(\"%d \",k-6);\n        else if(i==1 || i==13)\n            printf(\"%d \",k-5);\n        else if(i==2 || i==12)\n            printf(\"%d \",k-4);\n        else if(i==3 || i==11)\n            printf(\"%d \",k-3);\n        else if(i==4 || i==10)\n            printf(\"%d \",k-2);\n        else if(i==5 || i==9)\n            printf(\"%d \",k-1);\n        else if(i==6 || i==8)\n            printf(\"%d \",k);\n        else\n            printf(\"0 \");\n    }\n    return 0;\n}"
}