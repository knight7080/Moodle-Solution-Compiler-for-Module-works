{
    "Debug a functions to perform push, pop, display, peek in Stack using Array": "char stack[100];\nint size=3,top=-1,i;\nvoid push (char data)\n{\n    if(top==size-1)\n    {\n        printf(\"stack is full\\n\");\n    }\n    else\n    {\n        top=top+1;\n        stack[top]=data;\n    }\n}\nvoid display()\n{\n    if(top==-1)\n    {\n        printf(\"stack is empty\");\n    }\n    else\n    {\n        for(i=top;i>=0;i--)\n        {\n            printf(\"%c \",stack[i]);\n        }\n    }\n}\nvoid pop ()\n{\n    if(top==-1)\n    {\n        printf(\"stack is empty\");\n    }\n    else\n    {\n        top--;\n    }\n}\nvoid peek()\n{\n    printf(\"%c \",stack[top]);\n}",
    "Debug a function to push the given element into a Stack using array.": "int size=3,top=0,stack[100];\nvoid push (int data)\n{\n    if (top == size-1 )\n    {\n        printf(\"stack is full\\n\");\n    }\n    else\n    {\n        top = top + 1;\n        stack[top] = data;\n    }\n}",
    "Code the given function to find the peek(front) of queue using array.": "float queue[50];\nint front;\nvoid peek()\n{\n    if(front == -1)\n    {\n        printf(\"Queue is full\");\n    }\n    else\n    {\n        printf(\"%.1f\",queue[front]);\n    }\n}",
    "Write a function to display queue elements using array.": "int rear=-1, front=-1;\nfloat queue[50];\nvoid display()\n{\n    if(front==-1 || front>rear)\n        printf(\"No elements to display\\n\");\n    else\n    {\n        for(int i=front;i<=rear;i++)\n        {\n            printf(\"%.1f \", queue[i]);\n        }\n    }\n}",
    "Write a function to delete elements in queue using array.": "int front, rear;\nvoid dequeue()\n{\n    if(front==-1 || front>rear)\n    {\n        printf(\"No elements to display\");\n    }\n    else\n    {\n        front++;\n    }\n}",
    "Debug the given function to find the peek(front) of the queue using array.": "int front, queue[50];\nvoid peek()\n{\n    printf(\"%d\", queue[front]);\n}",
    "Debug a function to display queue elements using array.": "int queue[50], rear=-1, front=-1;\nvoid display()\n{\n    int i=0;\n    if(front==-1||front>rear)\n        printf(\"No elements to display\\n\");\n    else\n    {\n        for(i=front;i<=rear;i++)\n        {\n            printf(\"%d \", queue[i]);\n        }\n    }\n}",
    "Debug a function to delete elements in queue using array.": "int front, rear;\nvoid dequeue()\n{\n    if(front==-1||front>rear)\n    {\n        printf(\"Queue Underflow.\\n\");\n        return;\n    }\n    else\n    {\n        front++;\n    }\n}",
    "Write a functions to perform enqueue, dequeue, display, peek in Queue using Array": "int size=10;\nfloat queue[50];\nint rear=-1, front=-1;\nvoid enqueue(float data)\n{\n    if(rear<size)\n    {\n        if(front==-1)\n        {\n            front=0;\n        }\n        rear=rear+1;\n        queue[rear]=data;\n    }\n}\nvoid display()\n{\n    int i;\n    if(front==-1||front>rear)\n    {\n        printf(\"No elements to display\\n\");\n    }\n    else\n    {\n        for(i=front;i<=rear;i++)\n        {\n            printf(\"%.1f\\n\", queue[i]);\n        }\n    }\n}\nvoid dequeue()\n{\n    if(front==-1||front>rear)\n    {\n        printf(\"Queue Underflow\\n\");\n        return;\n    }\n    else\n    {\n        front=front+1;\n    }\n}\nvoid peek()\n{\n    printf(\"%.1f\\n\", queue[front]);\n}",
    "Write a function to insert elements in queue using array.": "char queue[50];\nint front=-1,rear=-1,size=10;\nvoid enqueue(char data)\n{\n    if(rear<size)\n    {\n        if(front==-1)\n        {\n            front=0;\n        }\n        rear++;\n        queue[rear]=data;\n    }\n}",
    "Debug a functions to perform enqueue, dequeue, display, peek in Queue using Array": "int size=10;\nint queue[50];\nint rear=-1, front=-1;\nvoid enqueue(int data)\n{\n    if(rear<size)\n    {\n        if(front==-1)\n        {\n            front=0;\n        }\n        rear=rear+1;\n        queue[rear]=data;\n    }\n}\n\nvoid display()\n{\n    int i;\n    if(front==-1||front>rear)\n    {\n        printf(\"No elements to display\\n\");\n    }\n    else\n    {\n        for(i=front;i<=rear;i++)\n        {\n            printf(\"%d\\n\", queue[i]);\n        }\n    }\n}\n\nvoid dequeue()\n{\n    if(front==-1||front>rear)\n    {\n        printf(\"Queue Underflow\\n\");\n        return;\n    }\n    else\n    {\n        front=front+1;\n    }\n}\n\nvoid peek()\n{\n    printf(\"%d\\n\", queue[front]);\n}",
    "Debug a function to insert elements in queue using array.": "int size=10, queue[50], rear=-1, front=-1;\nvoid enqueue(int data)\n{\n    if(rear<size)\n    {\n        if(front==-1)\n        {\n            front=0;\n        }\n        rear=rear+1;\n        queue[rear]=data;\n    }\n}\n\nvoid display()\n{\n    int i;\n    if(front==-1||front>rear)\n    {\n        printf(\"No elements to display\\n\");\n    }\n    else\n    {\n        for(i=front;i<=rear;i++)\n        {\n            printf(\"%d\\n\", queue[i]);\n        }\n    }\n}\n\nvoid dequeue()\n{\n    if(front==-1||front>rear)\n    {\n        printf(\"Queue Underflow\\n\");\n        return;\n    }\n    else\n    {\n        front=front+1;\n    }\n}\n\nvoid peek()\n{\n    printf(\"%d\\n\", queue[front]);\n}",
    "To convert the  string 'team' to uppercase": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char str[25];\n    fgets(str,sizeof(str),stdin);\n    for(int i=0;i<strlen(str);i++)\n    {\n        if(str[i]>='a' && str[i]<='z')\n        {\n            str[i]-=32;\n        }\n    }\n    printf(\"Upper case String is :%s\",str);\n    return 0;\n}",
    "Write a function to display stack elements using array.": "int stack[100],top,i;\nvoid display()\n{\n    if(top==-1)\n    {\n        printf(\"Error\");\n    }\n    else\n    {\n        for(int i=top;i>=0;i--)\n        {\n            printf(\"%d->\",stack[i]);\n        }\n    }\n}",
    "Write a function to push the given element in to a Stack using array.": "int size=3,top=-1,stack[100];\nvoid push (int data)\n{\n    if(top==size-1)\n    {\n        printf(\"Error\");\n    }\n    else\n    {\n        top++;\n        stack[top]=data;\n    }\n}"
}