{
    "write a c++ program to read 3 student details(regno,name & gender ) in one class and display the above details in another class using inheritance?": "#include <iostream>\nusing namespace std;\nclass A\n{\n    public:\n    int regno;\n    string name,gender;\n    void read()\n    {\n        cin>>regno>>name>>gender;\n    }\n};\nclass B:public A\n{\n    public:\n    void display()\n    {\n        cout<<regno<<\" \"<<name<<\" \"<<gender<<endl;\n    }\n};\nint main()\n{\n    B b1,b2,b3;\n    b1.read();\n    b2.read();\n    b3.read();\n    cout<<\"Student Detaile are\"<<endl;\n    b1.display();\n    b2.display();\n    b3.display();\n    return 0;\n    \n}",
    "write a c++ program to check loan eligibility based on age and income using multiple inheritance(age greater then 20 and less than 46) and income greater then 20000 is eligible for loan)": "#include <iostream>\nusing namespace std;\nclass A\n{\n    public:\n    int age,income;\n};\nclass B\n{\n    public:\n    void check(int age,int income)\n    {\n        if(age>=20 && age<=46 && income>=20000)\n        {\n            cout<<\"Eligible for Loan\";\n        }\n        else\n        {\n            cout<<\"Not Eligible for Loan\";\n        }\n        \n    }\n};\nclass C:public A,public B\n{\n    public:\n    void read()\n    {\n        cin>>age>>income;\n        check(age,income);\n    }\n    \n};\nint main()\n{\n    C c;\n    c.read();\n}",
    "To develop a c++ program for Electricity Bill calculation using multilevel inheritance (use service no ,name, previous reading, current reading, unit consumption & amount as data members)( units<=100 per unit Rs.2.50 ,units>100 and unit<=300 rs=3.50,above 300 units rs.5.50)": "#include <iostream>\nusing namespace std;\nclass EB\n{\n    public:\n    int sno,pr,cr;\n    int units;\n    float amount;\n    string name;\n    void read()\n    {\n        cin>>sno>>name>>pr>>cr;\n    }\n};\nclass EB_cal:public EB\n{\n    public:\n    void cal()\n    {\n        units=pr-cr;\n        if(units<=100)\n        {\n            amount=units*2.50;\n        }\n        else if(units>100 && units<=300)\n        {\n            amount=(100*2.50)+(units-100)*3.50;\n        }\n        else if(units>300)\n        {\n            amount=(100*2.50)+(200*3.50)+(units-300)*5.50;\n        }\n    }\n    \n};\nclass EB_display:public EB_cal\n{\n    public:\n    void display()\n    {\n        cout<<\"service number:\"<<sno<<endl;\n        cout<<\"service name:\"<<name<<endl;\n        cout<<\"unit consumption:\"<<units<<endl;\n        cout<<\"amount:\"<<amount<<endl;\n    }\n};\nint main()\n{\n    EB_display eb;\n    eb.read();\n    eb.cal();\n    eb.display();\n    return 0;\n}\n",
    "Write a program to find netsalary of the employee using Hybrid Inheritance?": "#include <iostream>\nusing namespace std;\nclass basic\n{\n    public:\n        float bp;\n        void getdata()\n        {\n            cin>>bp;\n        }\n};\nclass gross:public basic\n{\n    public:\n        float gd,lic,pf,gs,da,hra,cca;\n        void grosssalary()\n        {\n            da=bp*0.15;\n            hra=bp*0.18;\n            cca=bp*0.21;\n            gs=bp+da+hra+cca;\n            lic=bp*0.06;\n           pf=bp*0.09;\n           gd=pf+lic;\n           cout<<\"Gross Salary:\"<<gs<<endl;\n          cout<<\"Gross Deduction:\"<<gd<<endl;\n        }\n};\nclass employee\n{\n    public:\n        int empno;\n        string empname,empdesignation;\n        void getdata1()\n        {\n            cin>>empno>>empname>>empdesignation;\n        }\n    \n};\nclass netsalary:public employee,public gross\n{\n    public :\n    float ns;\n    void netsalary1()\n    {\n        ns=gs-gd;\n        cout<<\"Netsalary:\"<<ns;\n    }\n};\nint main()\n{\n    netsalary n;\n    n.getdata1();\n    n.getdata();\n    n.grosssalary();\n    n.netsalary1();\n}\n",
    "write a c++ program to read regno,name & gender in one class and display the above details in another class using inheritance?": "#include <iostream>\nusing namespace std;\nclass A\n{\n    public:\n        int regno;\n        string name,gender;\n        void read()\n        {\n            cin>>regno>>name>>gender;\n        }\n};\nclass B:public A\n{\n    public:\n    void display()\n    {\n        cout<<\"Register Number: \"<<regno<<endl;\n        cout<<\"Name: \"<<name<<endl;\n        cout<<\"Gender: \"<<gender;\n    }\n};\nint main()\n{\n    B b;\n    b.read();\n    b.display();\n    return 0;\n}",
    "Write a program to generate odd and even numbers between 1 to n using multiple inheritance(perform in one class odd and another class even number generation)": "#include <iostream>\nusing namespace std;\nint n,i;\nclass ODD\n{\n    public:\n    void odd()\n    {\n        cout<<\"The Odd numbers are:\";\n        for(i=1;i<=n;i++)\n        {\n            if(i%2!=0)\n            {\n                cout<<i<<\" \";\n            }\n        }\n    }\n};\nclass EVEN\n{\n    public:\n    void even()\n    {\n        cout<<endl<<\"The Even numbers are:\";\n        for(i=1;i<=n;i++)\n        {\n            if(i%2==0)\n            {\n                cout<<i<<\" \";\n            }\n        }\n    }\n};\nclass READ:public ODD, public EVEN\n{\n    public:\n    READ()\n    {\n        cin>>n;\n    }\n};\nint main()\n{\n    READ s;\n    s.odd();\n    s.even();\n    cout<<endl<<\"Operation Completed\";\n}",
    "write a program to check whether student is passed the exam and display their grades using Multilevel inheritance?": "#include <iostream>\nusing namespace std;\nclass A\n{\n    public:\n    int regno,marks[5],i;\n    int total=0,avg=0;\n    string name,grade=\" \";\n    void read()\n    {\n        cin>>regno>>name;\n        for(i=0;i<5;i++)\n        {\n            cin>>marks[i];\n        }\n    }\n};\nclass B:public A\n{\n    public:\n    void cal()\n    {\n        if(regno==0)\n        {\n            grade=\"Nil\";\n        }\n        else if(regno!=0)\n        {\n            for(i=0;i<5;i++)\n            {\n                total=total+marks[i];\n            }\n            avg=total/5;\n            if(avg>90)\n            {\n                grade='S';\n            }\n            else if(avg>80 && avg<=90)\n            {\n                grade=\"A\";\n            }\n            else if(avg>70 && avg<=80)\n            {\n                grade=\"B\";\n            }\n            else if(avg>=60 && avg<70)\n            {\n                grade=\"C\";\n            }\n            else if(avg>=50 && avg<60)\n            {\n                grade=\"D\";\n            }\n        }\n    }\n};\nclass C:public B\n{\n    public:\n    void display()\n    {\n        cout<<\"Student Number:\"<<regno<<endl;\n        cout<<\"Student Name:\"<<name<<endl;\n        cout<<\"Total:\"<<total<<endl;\n        cout<<\"Average:\"<<avg<<endl;\n        cout<<\"Grade:\"<<grade<<endl;\n    }\n};\nint main()\n{\n    C s;\n    s.read();\n    s.cal();\n    s.display();\n    return 0;\n}",
    "write a c++ program to read 3 employee details(empno,empname & empgender) in one class and display their details in another class using inheritance?": "#include<iostream>\nusing namespace std;\nclass A\n{\n    public:\n    int i,empno;\n    string empname,empgender;\n    void read();\n};\n// function definiion\nvoid A::read()\n{\n    \n    cin>>empno>>empname>>empgender;\n}\n \n/*Derived Class*/\nclass B:public A\n{\n    public:\n    void display();\n};\n// function definition\nvoid B::display()\n{ \n    cout<<empno<<\" \";\n    cout<<empname<<\" \";\n    cout<<empgender<<\" \"<<endl;\n}\n \nint main()\n{\n    //create object of derived class - class B\n    B objB1,objB2,objB3;\n    objB1.read();\n    objB2.read();\n    objB3.read();\n    cout<<\"Employee Detaile are\"<<endl;\n    objB1.display();\n    objB2.display();\n    objB3.display();\n    return 0;\n}",
    "To develop a c++ program for Electricity Bill calculation using multilevel inheritance (use service no ,name, previous reading, current reading, unit consumption & amount as data members)( units<=100 per unit Rs.2.00 ,units>100 and unit<=300 rs=3.00,above 300 units rs.5.00)": "#include <iostream>\nusing namespace std;\nclass EB\n{\n    public:\n    int sno,pr,cr;\n    int units;\n    float amount;\n    string name;\n    void read()\n    {\n        cin>>sno>>name>>pr>>cr;\n    }\n};\nclass EB_cal:public EB\n{\n    public:\n    void cal()\n    {\n        units=pr-cr;\n        if(units<=100)\n        {\n            amount=units*2;\n        }\n        else if(units>100 && units<=300)\n        {\n            amount=(100*2)+(units-100)*3;\n        }\n        else if(units>300)\n        {\n            amount=(100*2)+(200*3)+(units-300)*5;\n        }\n    }\n};\nclass EB_display:public EB_cal\n{\n    public:\n    void display()\n    {\n        cout<<\"service number:\"<<sno<<endl;\n        cout<<\"service name:\"<<name<<endl;\n        cout<<\"unit consumption:\"<<units<<endl;\n        cout<<\"amount:\"<<amount<<endl;\n    }\n};\nint main()\n{\n    EB_display eb;\n    eb.read();\n    eb.cal();\n    eb.display();\n    return 0;\n}",
    "Write a program to implement protected member with  string?": "#include<iostream>\nusing namespace std;\nclass A\n{\n    protected:\n    string name;\n};\nclass B:protected A\n{\n    public:\n    void display()\n    {\n        cin>>name;\n        cout<<\"The value of n is: \"<<name<<endl;\n    }\n};\nint main()\n{\n    B s;\n    s.display();\n}",
    "Write a C++ program to add the two numbers using inheritance (declare two input variable as protected in base class and read one value in one derived class and read another value its derived class and do the addition operation in its derived class).": "#include <iostream>\nusing namespace std;\nclass Base {\n      protected:\n      int a,b;\n};\nclass Child:protected Base\n{\n    public:\n    void A()\n    {\n        cin>>a;\n    }\n};\nclass Child2:public Child\n{\n    public:\n    void B()\n    {\n        cin>>b;\n    }\n};\nclass Child3:public Child2\n{\n    public:\n    void Add()\n    {\n        cout<<\"The Result is:\"<<a+b;\n    }\n};\nint main()\n{\n    Child3 s;\n    s.A();\n    s.B();\n    s.Add();\n}",
    "Write a C++ program to implement function overriding based on output requirement call the method using object?(to find area of circle (base class method) and rectangle(derived class method)": "#include <iostream>\nusing namespace std;\nclass Base\n{\n    public:\n    int r;\n    float area;\n    void cal()\n    {\n        cin>>r;\n        area=(3.14)*r*r;\n        cout<<\"Area of Circle:\"<<area<<endl;\n    }\n};\nclass Child:public Base\n{\n    public:\n    void cal()\n    {\n        ;\n    }\n};\nint main()\n{\n    Child s;\n    s.Base::cal();\n}",
    "write a c++ program to display names using overriding concept(display male in base class methods and female names using derived class methods,based on output requirement create respective object and call methods)": "#include <iostream>  \nusing namespace std;  \nclass base\n{\n    public:\n    string name;\n    void show()\n    {\n        cin>>name;\n        cout<<\"The Female Name is:\"<<name<<endl;\n    }      \n};   \nclass derived: public base\n{    \n    public: \n    void show()    \n    {\n        cin>>name;\n        cout<<\"The Male Name is:\"<<name<<endl;\n    }    \n};  \nint main(void)\n{\n    derived s;\n    s.show();\n    s.base::show();\n    return 0;  \n}  \n",
    "Write a C++ program to subtract the number using inheritance (declare two input variable as protected in base class and read one value in one derived class and read another value its derived class and do the subtraction operation in its derived class).": "#include <iostream>\nusing namespace std;\nclass Base {\n     public:\n      int a,b;\n};\nclass Derived:public Base\n{\n   public :\n   void func()\n   {\n       cin>>a;\n   }\n};\nclass Derived1:public Derived\n{\n    public:\n    void func1()\n    {\n        cin>>b;\n    }\n};\nclass Derived2:public Derived1\n{\n    public:\n    void display()\n    {\n        cout<<\"The Result is:\"<<a-b;\n    }\n};\nint main()\n{\n   Derived2 obj;\n   obj.func();\n   obj.func1();\n   obj.display();\n   return 0;\n}\n",
    "write a c++ program to display names using overriding concept(display male in base class methods and female names using derived class methods & access the overridden function inside the derived class).": "#include <iostream>\nusing namespace std;\nclass Names\n{\n    public:\n    string male,female;\n    void read()\n    {\n        cin>>male>>female;\n    }\n};\nclass Male:public Names\n{\n    public:\n    void print()\n    {\n        cout<<\"The Male Name is:\"<<male<<endl;\n    }\n};\nclass Female:public Male\n{\n    public:\n    void print()\n    {\n        cout<<\"The Female Name is:\"<<female<<endl;\n    }\n};\nint main()\n{\n    Female s;\n    s.read();\n    s.Male::print();\n    s.print();\n}",
    "Write a program to implement protected member with fractional values?": "#include <iostream>\nusing namespace std;\nclass Base\n{\n    protected:\n    float num;\n};\nclass Derived:protected Base\n{\n   public :\n   void func()\n   {\n       cin>>num;\n      cout<<\"The value of num is: \"<<num;\n   }\n};\nint main()\n{\n    Derived obj;\n    obj.func();\n    return 0;\n}\n",
    "Write a C++ program to implement function overriding based on output requirement call the method using object?(to find area of circle (base class method) and triangle(derived class method)": "#include <iostream>  \nusing namespace std;  \nclass Circle\n{\n    public:\n    int r;\n    void area()\n    {\n        cin>>r;\n        cout<<\"Area of Circle:\"<<(3.14)*r*r<<endl;\n    }      \n};   \nclass Triangle: public Circle    \n{    \n    public: \n    float w,b;\n    void area()    \n    {\n        cin>>w>>b;\n        cout<<\"Area of Triangle:\"<<(w*b)/2<<endl;\n    }\n};  \nint main(void)\n{  \n    Triangle s;\n    s.area();\n    s.Circle::area();\n    return 0;\n}  ",
    "Write a C++ program to get two numbers from two base classes and display the difference in the derived class.": "#include <iostream>\nusing namespace std;\nclass A\n{\n    protected:\n    int x;\n};\nclass B\n{\n    protected:\n    int y;\n};\nclass C : protected B,protected A\n{\n    public:\n    void read()\n    {\n        cin>>x>>y;\n        cout<<\"Difference of two numbers = \"<<x-y;   \n    }\n};\nint main()\n{\n    C s;\n    s.read();\n}",
    "Write a C++ program to find the area of the sphere(4\u03c0 r2 ) using simple inheritance.": "#include<iostream>\nusing namespace std;\nclass Base\n{\n    private:\n    int r;\n    float area;\n    public:\n    float read()\n    {\n        cin>>r;\n        area=(4)*(3.14)*(r*r);\n        return area;\n    }\n};\nclass Derived:public Base\n{\n    public:\n    void display()\n    {\n        float area=read();\n        cout<<\"Area of the Sphere : \"<<area;\n    }\n};\nint main()\n{\n    Derived s;\n    s.read();\n    s.display();\n}",
    "To develop a c++ program for Electricity Bill calculation using multilevel inheritance (use service no ,name, previous reading, current reading, unit consumption & amount as data members)( units<=100 per unit Rs.2.50 ,units>100 and unit<=300 rs=3.50,unit 301 to 500  rs.5.50 per unit,units above 500 rs 7.50 per unit)": "#include <iostream>\nusing namespace std;\nclass EB\n{\t\npublic:\n     int sno,pr,cr;\n     string name;\n      void read()\n      {\n        cin>>sno>>name>>cr>>pr;\n      }\n};\nclass unitconsum:public EB\n{\n    public: \n    int uc;\n    void unitconsum1()\n    {\n       uc=cr-pr;\n    }\n};\nclass ebbill:public unitconsum\n{\n    public:\n       int amount;\n    void calculate()\n    {\n        if(uc<=100)\n        {\n            amount=uc*2.50;\n        }\n        else if(uc>100 &&uc<=300)\n        {\n            amount=(100*2.50)+(uc-100)*3.50;\n        }\n        else if(uc>300 && uc<=500)\n        {\n            amount=(100*2.50)+(200*3.50)+(uc-300)*5.50;\n        }\n        else if(uc>500)\n        {\n            amount=2800;//(100*2.50)+(200*3.50)+(300*5.50)*(uc-500)*7.50;\n        }\n    }\n};\nint main()\n{\n    ebbill eb;\n    eb.read();\n    eb.unitconsum1();\n    eb.calculate();\n    cout<<\"service number:\"<<eb.sno<<endl;\n    cout<<\"service name:\"<<eb.name<<endl;\n    cout<<\"unit consumption:\"<<eb.uc<<endl;\n    cout<<\"amount:\"<<eb.amount<<endl;\n    return 0;\n}\n",
    "Write a c++ program to find difference & quotient  of two numbers using Hierarchical inheritance?": "#include<iostream>\nusing namespace std;\nclass A\n{\n    public:\n    int x,y;\n    int dif,quo;\n    void read()\n    {\n        cin>>x>>y;\n    }\n    void cal()\n    {\n        dif=x-y;\n        quo=x/y;\n    }\n};\nclass B:public A\n{\n    public:\n    void display()\n    {\n        cout<<\"Difference=\"<<dif<<endl;\n    }\n};\nclass C:public A\n{\n    public:\n    void display()\n    {\n        cout<<\"Quotient=\"<<quo;\n    }\n};\nint main()\n{\n    B b;\n    C c;\n    b.read();\n    b.cal();\n    b.display();\n    c.read();\n    c.cal();\n    c.display();\n}",
    "Write a c++ program to find sum & product of two numbers using Hierarchical inheritance?": "#include<iostream>\nusing namespace std;\nclass Base\n{\n    public:\n    int a,b;\n};\nclass Derived1:public Base\n{\n    public:\n    void product()\n    {\n        cin>>a>>b;\n        cout<<\"Product=\"<<a*b<<endl;\n    }\n};\nclass Derived2:public Base\n{\n    public:\n    void sum()\n    {\n        cin>>a>>b;\n        cout<<\"Sum=\"<<a+b<<endl;\n    }\n};\nint main()\n{\n    Derived1 d1;\n    d1.product();\n    Derived2 d2;\n    d2.sum();\n    return 0;\n}",
    "Write a c++ program to get two numbers from two base classes and display the sum in the derived class.": "#include <iostream>\nusing namespace std;\nclass A\n{\n    public:\n    int a;\n    void Read_A()\n    {\n        cin>>a;\n    }\n};\nclass B\n{\n    public:\n    int b;\n    void Read_B()\n    {\n        cin>>b;\n    }\n};\nclass C : public A ,public B\n{\n    public:\n    int sum;\n    void display()\n    {\n        sum=a+b;\n        cout<<\"Addition of two numbers = \"<<sum;\n    }\n};\nint main()\n{\n    C s;\n    s.Read_A();\n    s.Read_B();\n    s.display();\n    return 0;\n}",
    "Debug a C++ program to get two numbers from two base classes and display the bitwise & operation in the derived class.": "// Online C++ compiler to run C++ program online\n#include <iostream>\nusing namespace std;\nclass A\n{\n    protected:\n    int a;\n    public:\n    void seta(int x)\n    {\n        a = x;\n    }\n};\nclass B\n{\n    protected:\n    int b;\n    public:\n    void setb(int y) \n    {\n        b = y;\n    }\n};\nclass C : public A,public B \n{\n    public:\n    void bit()\n    {\n        cout<<\"Bitwise & of two numbers = \"<<a/b;\n    }\n};\n\nint main() {\n  int x,y;\n  C obj;\n cin>>x>>y;\n  obj.seta(x);\n  obj.setb(y);\n  obj.bit();\n  return 0;\n}",
    "write a program to do integer arithmetic operation using muliple inheritance( + and - operation in one class,* and / in another class).": "#include <iostream>\nusing namespace std;\nint a,b;\nfloat c;\nclass A\n{\n    public :\n        void add()\n        {\n            c=a+b;\n            cout<<\"The Result of the Addition is:\"<<c<<endl;\n        }\n        void sub()\n        {\n            c=a-b;\n            cout<<\"The Result of the Subtraction is:\"<<c<<endl;\n        }\n};\nclass B\n{\n    public:\n        void mul()\n        {\n            c=a*b;\n            cout<<\"The Result of the Multiplication is:\"<<c<<endl;\n        }\n        void divide()\n        {\n            c=a/b;\n            cout<<\"The Result of the Division is:\"<<c<<endl;\n        }\n};\nclass arithmatic:public A,public B\n{\n   public:\n        void modulo()\n        {\n            c=a%b;\n            cout<<\"The Result of the Modulo is:\"<<c<<endl;\n        }\n};\nint main()\n{\n    arithmatic am;\n    cin>>a>>b;\n    am.add();\n    am.sub();\n    am.mul();\n    am.divide();\n    am.modulo();\n    return 0;\n}\n",
    "Write a C++ program to pass a character to the parameterized constructor of the base class through derived class constructor.": "#include<iostream>\nusing namespace std;\nclass Parent\n{\n    public:\n    string ch;\n    Parent()\n    {\n        cin>>ch;\n        cout<<\" The value passed to the base class is \"<<ch<<endl;\n    }\n};\nclass Child : public Parent\n{\n    public:\n    Child()\n    {\n        cout<<\"The value \"<<ch<<\" is passed through the derived class constructor\";\n    }\n};\nint main()\n{\n    Child c;\n}",
    "Write a C++ program to multiply two numbers using  derived constructor (declare two input variable as protected in base class and read one value in base class constructor and read another value its derived class constructor  and do the calculation in its another derived class constructor ).": "#include <iostream>\nusing namespace std;\nclass Base\n{\n    protected:\n    int a,b;\n    public:\n    Base()\n    {\n        cin>>a;\n    }\n};\nclass Derived1:public Base \n{\n    public:\n    Derived1()\n    {\n        cin>>b;\n    }\n};\nclass Derived2:public Derived1\n{\n    public:\n    Derived2()\n    {\n        cout<<\"The Result is:\"<<a*b;\n    }\n};\nint main()\n{\n    Derived2 s;\n}",
    "Write a C++ program to display the Student details (001,\"Shiva\",98.65) using the multiple inheritance constructors .": "#include <iostream>\nusing namespace std;\nclass base1\n{\n    public:\n    int rollno=001;\n    base1()\n    {\n        cout<<\" Student Roll_No : \"<<rollno<<endl;\n    }\n};\nclass base2\n{\n    public:\n    string name=\"Shiva\";\n    base2()\n    {\n        cout<<\" Student Name : \"<<name<<endl;\n    }\n};\nclass derived1 : public base1, public base2\n{\n    public:\n    float cgpa=98.65;\n    derived1()\n    {\n        cout<<\" Student CGPA : \"<<cgpa;\n    }\n    \n};\nint main ()\n{\n    derived1 s;\n    return 0;   \n}",
    "Write a C++ program to find the Area of a Rectangle and Triangle using constructors, implementing hierarchical inheritance. ": "#include <iostream>  \nusing namespace std;  \nclass getData \n{\n    public:\n    int l,w;\n    getData()\n    {\n        cin>>l>>w;\n    }\n};  \nclass RectArea : public getData\n{\n    public:\n    RectArea()\n    {\n        cout<<\"Area of the rectangle is \"<<l*w<<endl;\n    }\n};  \nclass TriArea : public getData\n{\n    public:\n    TriArea()\n    {\n        cout<<\" Area of the triangle  is \"<<(l*w)/2;\n    }\n};  \nint main()  \n{\n    RectArea R;\n    TriArea T;\n    return 0;  \n}  ",
    "Write a C++ program to pass the string \"Shiva\" to the parameterized constructor of a base class through a derived class constructor. ": "#include<iostream>\nusing namespace std;\nclass Parent\n{\n    public:\n    string name=\"Shiva\";\n    Parent()\n    {\n        cout<<\"The name passed to the base class is \"<<name<<endl;\n    }\n};\nclass Child : public Parent\n{\n    public:\n    Child()\n    {\n        cout<<\"The name \"<<name<<\" is passed through the derived class constructor\";\n    }\n};\n int main()\n{\n    Child s;\n}",
    "Write a C++ program to add numbers using  derived constructor (declare two input variable as protected in base class and read one value in base class constructor and read another value in its derived class constructor  and do the sum operation in its another derived class constructor ).": "#include <iostream>\nusing namespace std;\nclass Base\n{\n    protected:\n    int a,b;\n    Base()\n    {\n        cin>>a;\n    }\n};\nclass Derived1:public Base \n{\n    public:\n    Derived1()\n    {\n        cin>>b;\n    }\n};\nclass Derived2:public Derived1\n{\n    public:\n    Derived2()\n    {\n        cout<<\"The Result is:\"<<a+b;\n    }\n};\nint main()\n{\n    Derived2 s;\n}\n",
    "Write a C++ program to display the Employee details using the multiple inheritance constructors . Get the values from the user.": "#include <iostream>\nusing namespace std;\nclass base1\n{\n    public:\n    int id;\n    base1()\n    {\n        cin>>id;\n        cout<<\" Employee ID : \"<<id<<endl;\n    }\n};\nclass base2\n{\n    public:\n    string name;\n    base2()\n    {\n        cin>>name;\n        cout<<\" Employee Name : \"<<name<<endl;\n    }\n};\nclass derived1 : public base1, public base2\n{\n    public:\n    string design;\n    derived1()\n    {\n        cin>>design;\n        cout<<\" Employee Designation : \"<<design<<endl;\n    }\n};\nint main ()\n{\n    derived1 s;\n    return 0;   \n}",
    "Debug a C++ program to pass the integer value to the parameterized constructor of a base class through derived class.": "#include<iostream>\nusing namespace std;\nclass Parent\n{\n    int x;\n    public:\n    Parent(int i)\n    {\n        x = i;\n        cout <<\" The value passed to the base class is \"<<x<<endl;\n    }     \n};\nclass Child : public Parent\n{\n    public:\n    Child(int x): Parent(x)\n    {\n        cout<<\" The value \"<<x<<\" is passed through the derived class constructor\" <<endl;\n    }\n};\n int main()\n{\n    int a;\n    cin>>a;\n    Child obj1(a);\n}\n\n",
    "Debug a C++ program to multiply two numbers using  derived constructor (declare two input variable as protected in base class and read one value in base class constructor and read another value its derived class constructor  and do the sum operation in its another derived class constructor ).": "#include <iostream>\nusing namespace std;\nclass Base\n{\n    protected:\n    int a,b;\n    public :\n    Base() \n    {\n        cin>>a;\n    }\n};\nclass Derived1:public Base \n{\n    public:\n    Derived1()\n    {\n       cin>>b;\n    }\n};\nclass Derived2:public Derived1\n{\n    public:\n    Derived2()\n    {\n      int c=a*b;\n      cout<<\"The Result is:\"<<c;\n    }\n};\nint main()\n{\n   Derived2 obj;\n}",
    "Debug a C++ program to display the Employee details (1001,\"Shiva\",\"Manager\") using the multiple inheritance constructors .": "#include <iostream>\nusing namespace std;\nclass base1\n{\n    public:\n    base1(int x)\n    {\n        cout<<\" Employee ID : \"<<x<<endl;\n    }\n};\nclass base2\n{\n    public:\n    base2(string str)\n    {\n       cout<<\" Employee Name : \"<<str<<endl;\n    }\n};\nclass derive1 : public base1, public base2\n{\n    public:\n    derive1(int x,string str,string d) : base1(x),base2(str)\n    {\n     cout<<\" Employee Designation : \"<<d;\n    }\n};\nint main()\n{\n    derive1 obj(1001,\"Shiva\",\"Manager\");\n    return 0;\n}"
}