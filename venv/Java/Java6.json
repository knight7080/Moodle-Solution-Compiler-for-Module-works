{
    "Write a java program to perform multiple catch using multiple Exception(": "import java.util.*;\nclass ListOfNumbers {\n    public int[] arr = new int[5];\n    void writeList()\n    {\n        Scanner sc=new Scanner(System.in);\n        try\n        {\n            //Write the code for try block\n            int n=Integer.parseInt(sc.nextLine());\n            System.out.println(\"Valid Statement :\" +arr[n]);\n            \n        }\n        catch (NumberFormatException e1)\n        {\n            System.out.println(\"NumberFormatException : \" + e1);\n        }\n        catch (IndexOutOfBoundsException e2)\n        {\n            System.out.println(\"IndexOutOfBoundsException : \" + e2);\n        }\n    }\n}\n\npublic class Main {\n  public static void main(String[] args) {\n    ListOfNumbers list = new ListOfNumbers();\n    list.writeList();\n  }\n}",
    "Note: 1. Get Index value n as input from the user and assign value as 7": "import java.util.*;\npublic class Example1\n{\n   public static void main(String args[])\n   {\n       Scanner sc = new Scanner(System.in);\n       int n=sc.nextInt();\n       try\n       {\n            int a[]=new int[10];\n            a[n]=7;\n            System.out.println(\"Value: \"+a[n]);\n       }\n       catch(ArrayIndexOutOfBoundsException e1)\n      {\n          System.out.println(\"ArrayIndexOutOfBounds\");\n      }\n   }\n}\n    ",
    "Write a java program to implement compile time polymorphism.(Use single argument for displaying 5 and * as 10 times)": "class Pattern {\n    public void display()\n    {\n        for (int i = 0; i < 10; i++) \n        {\n            System.out.print(\"5\");\n        }\n    }\n    public void display(char symbol)\n    {\n        for (int i = 0; i < 10; i++)\n        {\n            System.out.print(symbol);\n        }\n    }\n}\npublic class HelloWorld{\n\n    public static void main(String []args)\n    {\n        Pattern d1 = new Pattern();\n        d1.display();\n        System.out.println(\"\\n\");\n        d1.display('#');\n    }\n}",
    "Write a Java Program for run time polymorphism by creating a class named Shape that contains a empty method named print Area().\nProvide two classes named Rectangle and triangle such that each one of the classes extends the class Shape. Each one of the classes contains only the method print Area () that prints the area of the given shape": "import java.util.*;\nclass Shape\n{\n    void draw(int a,int b){ }  \n}  \nclass Rectangle extends Shape\n{  \n    void draw(int a,int b)\n    {\n        int area=(a*b);\n        System.out.println(\"Area of Rectangle:\" +area);}  \n    }  \nclass Triangle extends Shape\n{\n    void draw(int a,int b)\n    {\n        int area=(a*b)/2;\n        System.out.println(\"Area of Triangle:\" +area);}  \n    }  \npublic class Main\n{\n\tpublic static void main(String[] args) \n\t{\n        Shape s;  \n        Scanner sc=new Scanner(System.in);\n        int a=sc.nextInt();\n        int b=sc.nextInt();\n        \n        s=new Rectangle();  \n        s.draw(a,b);  \n        \n        s=new Triangle();  \n        s.draw(a,b);  \n    }\n}",
    "Write a java program to handle nested try Statement .": "import java.util.Scanner;\npublic class HelloWorld {\n    public static void main(String[] args)\n    {\n        Scanner sc = new Scanner(System.in);\n        try\n        {\n            int a=sc.nextInt();\n            int b=sc.nextInt();\n            int c=a/b;\n            System.out.println(\"Result: \" +c); \n        }\n        catch(ArithmeticException e)  \n        {  \n            System.out.println(\"Arithmetic Exception: Number should not divide by zero\");  \n        }  \n    }\n}",
    "Write a java program for run time polymorphism.Consider a scenario method showcase() is displaying different messages depending on which type of object it is associated with. When it is associated with the \u201cParents\u201d  class, it is showing messages as \"I am Parent\". When it is associated with the \u201cChildren\u201d type, it shows messages as \"I am Child\".": "// Online Java Compiler\n// Use this editor to write, compile and run your Java code online\nimport java.util.Scanner;\n\npublic class HelloWorld {\n    public static void main(String[] args)\n    {\n        Scanner scn = new Scanner(System.in);\n        try\n        {\n            int n = Integer.parseInt(scn.nextLine());\n           \n            if (10%n == 0)\n                System.out.println(\"Value: \" +n);\n        }\n        catch (ArithmeticException ex)\n        {\n            System.out.println(\"Arithmetic Exception : \" +ex);\n        }\n        catch (NumberFormatException ex)\n        {\n            System.out.println(\"Number Format Exception \" + ex);\n        }\n    }\n}",
    " Write a java program for solving the following error": "class Parents {\n    public void showcase () \n    {\n        System.out.println(\"I am Parent\");\n    }\n}\nclass Children extends Parents {\n    @Override\n    public void showcase () \n    {\n        System.out.println(\"I am Child\");\n    }\n}\npublic class RunTimePolymorphism {\n    public static void main(String args[]) \n    {\n        Parents superObject = new Parents();\n        superObject.showcase();\n        Parents subObject = new Children();\n        subObject.showcase();\n    }\n}",
    "Write a java program to add two numbers using Method Overloading(Compile time polymorphism)": "class Parents {\npublic void showcase () {\nSystem.out.println(\"I am Parent\");\n}\n}\nclass Children extends Parents {\n@Override\npublic void showcase () {\nSystem.out.println(\"I am Child\");\n}\n}\npublic class RunTimePolymorphism {\npublic static void main(String args[]) {\nParents superObject = new Parents();\nsuperObject.showcase(); //method of super class or parent class is called\nParents subObject = new Children(); // upcasting\nsubObject.showcase();//method of sub class or child class is called by Parent reference, this is called \"Run time Polymorphism\"\n\n}\n}",
    "Write a Java program for solving the error using Exception Handling": "import java.util.Scanner;\npublic class HelloWorld {\n    public static void main(String[] args)\n    {\n        Scanner scn = new Scanner(System.in);\n        try\n        {\n            int n = Integer.parseInt(scn.nextLine());\n            if (10%n == 0)\n                System.out.println(\"Value: \" +n);\n        }\n        catch (ArithmeticException ex)\n        {\n            System.out.println(\"Arithmetic Exception : \" +ex);\n        }\n        catch (NumberFormatException ex)\n        {\n            System.out.println(\"Number Format Exception \" + ex);\n        }\n    }\n}",
    "Write a java program to implement compile time polymorphism.(Use single argument for displaying integer and double values as 10 times)": "import java.util.*;\nclass Pattern\n{\n    public void display(int a)\n    {\n        for (int i = 0; i < 10; i++)\n        {\n            System.out.print(a);\n        }\n    }\n    public void display(double b)\n    {\n        for (int i = 0; i < 10; i++)\n        {\n            System.out.print(b);\n        }\n    }\n}\npublic class HelloWorld {\n    public static void main(String []args)\n    {\n        Pattern d1 = new Pattern();\n        Scanner sc=new Scanner(System.in);\n        int a=sc.nextInt();\n        double f=sc.nextDouble();\n        d1.display(a);\n        System.out.println(\"\\n\");\n        d1.display(f);\n    }\n}",
    "Write a java program to demonstrate multiple catch blocks for multiple exceptions": "import java.util.*;\npublic class HelloWorld {\n    public static void main(String[] args)\n    {\n        Scanner sc=new Scanner(System.in);\n        try\n        {\n            int n=Integer.parseInt(sc.nextLine());\n            if(10%n==0)\n                System.out.println(\"Value: \"+n);\n        }\n        catch (ArithmeticException e1)\n        {\n            System.out.println(\"Arithmetic Exception : \"+e1);\n        }\n        catch (NumberFormatException e2)\n        {\n            System.out.println(\"Number Format Exception \"+e2);\n        }\n    }\n}",
    "Rule: Get dividend value from the user": "import java.util.*;\nfinal class staffDetails\n{\n    final String companyname=\"Amazon\";\n    String name;\n    int Id;\n    void get()\n    {\n        Scanner sc=new Scanner(System.in);\n        name=sc.next();\n        Id=sc.nextInt();\n        //des=sc.next();\n    }\n    void print()\n    {\n        System.out.println(\"Employee Details are,\"+\"\\nId is \"+Id+\"\\nName is \"+name+\"\\nCompany Name: \"+companyname);\n    }\n}\npublic class Main{\n    public static void main(String[] args)\n    {\n        staffDetails obj=new staffDetails();\n        obj.get();\n        obj.print();\n    }\n}",
    "Write a java program to perform user defined exception using throw concept. Consider, we have created the validate() method that takes integer age value as a parameter. If the age is less than 18, we are throwing the ArithmeticException as \"Person is not eligible for Opening Bank Account\"    otherwise print a message as \"Person is eligible to Open Bank Account!!\"": "import java.util.Scanner;\npublic class HelloWorld {\n    static void validate(int age)  \n    {\n        try\n        {\n            if (age<18)\n                throw new ArithmeticException(\"Person is not eligible for Opening Bank Account\");\n            else\n                System.out.println(\"Person is eligible to Open Bank Account!!\");\n        }\n        catch (Exception e1)\n        {\n            System.out.println(e1);\n        }\n    } \n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        validate(sc.nextInt());\n    }    \n}",
    "Write a Java Program to perform Arithmetic Exception for voting purpose using throws .": "import java.util.*;\npublic class Main \n{\n    static void checkAge(Double age) \n    {\n        if(age<18)\n            throw new ArithmeticException(\"Access denied - You must be at least 18 years old.\");\n        else\n            System.out.println(\"Access granted - You are old enough!\");\n}\n  public static void main(String[] args) \n  { \n      Scanner sc=new Scanner(System.in);\n      double n=sc.nextDouble();\n      try\n      {\n         checkAge(n);\n      }\n      catch(ArithmeticException e)\n      {\n          System.out.println(\"Exception : \"+e);\n      }\n  }\n}",
    "Write a Java Program to perform NullPointerException using throws .": "import java.util.*;\npublic class Main {\n    static void fun(String str) throws NullPointerException\n    {\n        int n=str.length();\n        if (n=='\\0')\n        {\n            throw new NullPointerException(\"Enter some value for the String\");\n        }\n        else\n        {\n            System.out.println(\"String Length : \"+n);\n        }\n    }\n    public static void main(String[] args) \n    { \n        Scanner sc=new Scanner(System.in); \n        String str=sc.nextLine();\n        try\n        {\n            fun(str);\n        }\n        catch(NullPointerException e)\n        {\n            System.out.println(\"Exception : \"  +e);\n        }\n    }\n}",
    "value \"HCL\" , Get as input from the user for id,designation and name and write  print() to display its member in the Output. ": "import java.util.*;\nfinal class staffDetails\n{\n    final String companyname=\"HCL\";\n    String name;\n    int Id;\n    void get()\n    {\n        Scanner sc=new Scanner(System.in);\n        name=sc.next();\n        Id=sc.nextInt();\n        //des=sc.next();\n    }\n    void print()\n    {\n        System.out.println(\"Employee Details are,\"+\"\\nId is \"+Id+\"\\nName is \"+name+\"\\nCompany Name: \"+companyname);\n    }\n}\npublic class Main{\n    public static void main(String[] args)\n    {\n        staffDetails obj=new staffDetails();\n        obj.get();\n        obj.print();\n    }\n}",
    "Write a Java program for performing exception using throws": "import java.util.*;\npublic class ThrowsExecp {\n    static void fun() throws IllegalAccessException\n    {\n        Scanner in=new Scanner(System.in);\n        int a=in.nextInt();\n        System.out.println(\"Inside function. \");\n        throw new IllegalAccessException(\" Entered Input value as:    \" +a);\n    }\n    public static void main(String args[])\n    {\n        try\n        {\n            fun();\n        }\n        catch (IllegalAccessException e)\n        {\n            System.out.println(\"caught in main.\" +e);\n        }\n    }\n}",
    "Write a Java Program to perform ArrayIndexOutOfBoundsException using throws .": "import java.util.*;\npublic class Main \n{\n  \n  static void checkAge(int age) throws ArithmeticException {\n    if (age < 18) {\n      throw new ArithmeticException(\"Access denied - You must be at least 18 years old.\");\n    }\n    else {\n      System.out.println(\"Access granted - You are old enough!\");\n    }\n  }\n\n  public static void main(String[] args) \n  { \n      Scanner sc=new Scanner(System.in);\n      int n=sc.nextInt();\n      try\n      {\n      checkAge(n);\n      }\n      catch(Exception e)\n      {\n          System.out.println(\"Exception : \"  +e);\n      }\n     // Set age to 15 (which is below 18...)\n  }\n}\n",
    "For example:": "import java.util.*;\npublic class Main \n{\n    static void fun(int n) throws ArrayIndexOutOfBoundsException\n    {\n        int a[] = new int[n];\n        if (n>5)\n        {\n            throw new ArrayIndexOutOfBoundsException(\"Size of the array Should not exceed 5\");\n        }\n        else\n        {\n            System.out.println(\"Size of the Array : \"+n);\n        }\n    }\n    public static void main(String[] args) \n    { \n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        try\n        {\n            fun(n);\n        }\n        catch(Exception e)\n        {\n            System.out.println(\"Exception : \"  +e);\n        }\n    }\n}",
    "value \"3th Year\" , Get as input from the user for id and name and write  print() to display its member in the Output. ": "import java.util.*;\npublic class Main \n{\n   static void fun(int n) throws ArrayIndexOutOfBoundsException\n  {\n      int a[] = new int[n];\n    if (n>5)\n    {\n        \n       throw new ArrayIndexOutOfBoundsException(\"Size of the array Should not exceed 5\");\n    }\n    else {\n      System.out.println(\"Size of the Array : \"+n);\n    }\n  }\n\n  public static void main(String[] args) \n  { \n      Scanner sc=new Scanner(System.in);\n      int n=sc.nextInt();\n      \n      try\n      {\n      fun(n);\n      }\n      catch(Exception e)\n      {\n          System.out.println(\"Exception : \"  +e);\n      }\n     // Set age to 15 (which is below 18...)\n  }\n}\n",
    "Write a java program to perform user defined exception using throw concept. Consider, we have created the validate() method that takes String  value as a parameter. If the String length ='\\0' , we are throwing the NullPointerException as \"Enter some value for the String\"    otherwise print a message as \"String Length :  \"": "import java.util.*;\npublic class Main \n{\n   static void fun(int n) throws ArrayIndexOutOfBoundsException\n  {\n      int a[] = new int[n];\n    if (n>5)\n    {\n        \n       throw new ArrayIndexOutOfBoundsException(\"Size of the array Should not exceed 5\");\n    }\n    else {\n      System.out.println(\"Size of the Array : \"+n);\n    }\n  }\n\n  public static void main(String[] args) \n  { \n      Scanner sc=new Scanner(System.in);\n      int n=sc.nextInt();\n      \n      try\n      {\n      fun(n);\n      }\n      catch(Exception e)\n      {\n          System.out.println(\"Exception : \"  +e);\n      }\n     // Set age to 15 (which is below 18...)\n  }\n}\n",
    "value \"Amazon\" , Get as input from the user for id,designation and name and write  print() to display its member in the Output. ": "import java.util.*;\npublic class Main \n{\n    static void fun(int n) throws ArrayIndexOutOfBoundsException\n    {\n        int a[] = new int[n];\n        if (n>5)\n        {\n            throw new ArrayIndexOutOfBoundsException(\"Size of the array Should not exceed 5\");\n        }\n        else\n        {\n            System.out.println(\"Size of the Array : \"+n);\n        }\n    }\n    public static void main(String[] args) \n    { \n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        try\n        {\n            fun(n);\n        }\n        catch(Exception e)\n        {\n            System.out.println(\"Exception : \"  +e);\n        }\n    }\n}",
    "Write a Java program to count the vowels and consonant in the given string by calling run method": "import java.util.*;\npublic class Multi implements Runnable\n{  \n    Scanner sc=new Scanner(System.in);\n    public void run()\n    {  \n        String str = sc.nextLine();  \n        int vCount = 0, cCount = 0;    \n        \n        str = str.toLowerCase();    \n        \n        for(int i = 0; i < str.length(); i++)\n        {\n            if(str.charAt(i) == 'a' || str.charAt(i) == 'e' || str.charAt(i) == 'i' || str.charAt(i) == 'o' || str.charAt(i) == 'u') \n            {    \n                vCount++;    \n            }    \n            else if(str.charAt(i) >= 'a' && str.charAt(i)<='z')\n            {      \n                cCount++;    \n            }    \n        }    \n        System.out.println(\"Number of vowels: \" + vCount);    \n        System.out.println(\"Number of consonants: \" + cCount);   \n    }  \n    public static void main(String args[])\n    {  \n        Multi m1=new Multi(); \n        Thread t1 =new Thread(m1); \n        t1.run();  \n    }  \n}",
    "Write a java program for set the priority and name of the current thread.": "   import java.util.*;\n    public class Multi extends Thread\n    {  \n        Scanner sc=new Scanner(System.in);\n        \n    public void run()\n    {  \n        String name=sc.nextLine();\n        System.out.println(\"Thread Name:\" +name);  \n    }  \n    public static void main(String args[]){  \n    Multi t1=new Multi();  \n    t1.start();  \n     }  \n    }  ",
    "Write a Java program to create Thread using extends In run method get the Patient details as patient name and patient Id as String variable from the user and print the value in Output screen": "import java.util.*;\npublic class Multi extends Thread\n{  \n    Scanner sc=new Scanner(System.in);\n    public void run()\n    {  \n        String sname=sc.nextLine();\n        int rollno = sc.nextInt();\n        System.out.println(\"Patient Name: \" +sname);  \n        System.out.println(\"Patient ID: \" +rollno);  \n    }  \n    public static void main(String args[])\n    {\n        Multi t1=new Multi();  \n        t1.start();  \n    }  \n}",
    "Write a Java program to create Thread using extends In run method get the student name and roll number from the user and print the value": "   import java.util.*;\n    public class Multi implements Runnable\n    {  \n        Scanner sc=new Scanner(System.in);\n        \n    public void run()\n    {  \n        int num=sc.nextInt();\n       if(num>0)  \n{  \nSystem.out.println(\"The number is positive.\");  \n}  \n//checks the number is less than 0 or not  \nelse if(num<0)  \n{  \nSystem.out.println(\"The number is negative.\");  \n}  \n//executes when the above two conditions return false  \nelse  \n{  \nSystem.out.println(\"The number is zero.\");  \n}  \n    }  \n    public static void main(String args[]){  \n    Multi m1=new Multi(); \n    Thread t1 =new Thread(m1); \n    t1.start();  \n     }  \n    }  ",
    "Write a Java program to perform whether the given number is Positive or Negative ,zero by creating Thread using Runnable Interface.": "import java.util.*;\npublic class Multi implements Runnable\n{  \n    Scanner sc=new Scanner(System.in);\n    public void run()\n    {  \n        int num=sc.nextInt();\n        if(num>0)  \n        {  \n            System.out.println(\"The number is positive.\");  \n        }\n        else if(num<0)  \n        {  \n            System.out.println(\"The number is negative.\");  \n        }\n        else  \n        {  \n            System.out.println(\"The number is zero.\");  \n        }\n    }\n    public static void main(String args[])\n    {  \n        Multi m1=new Multi(); \n        Thread t1 =new Thread(m1); \n        t1.run();  \n    }  \n}",
    "Write a Java program to create Thread using extends": "import java.util.*;\npublic class Multi extends Thread\n{  \n    Scanner sc=new Scanner(System.in);\n    public void run()\n    {  \n        String sname=sc.nextLine();\n        int rollno = sc.nextInt();\n        System.out.println(\"Student Name: \" +sname);  \n        System.out.println(\"Roll No: \" +rollno);  \n    }  \n    public static void main(String args[])\n    {\n        Multi t1=new Multi();  \n        t1.start();  \n    }  \n}",
    "Write a java program for determine the priority and name of the current thread.": "   import java.util.*;\n    public class Multi extends Thread\n    {  \n        Scanner sc=new Scanner(System.in);\n        \n    public void run()\n    {  \n        String name=sc.nextLine();\n        System.out.println(\"Thread Name:\" +name);  \n    }  \n    public static void main(String args[]){  \n    Multi t1=new Multi();  \n    t1.start();  \n     }  \n    }  ",
    "Write a Java program to perform whether the given number is Positive or Negative ,zero by calling run method": "import java.util.*;\npublic class Multi extends Thread\n{  \n    Scanner sc=new Scanner(System.in);\n    public void run()\n    {  \n        int count=sc.nextInt();\n        System.out.println(\"Thread Count: \"+count);  \n    }  \n    public static void main(String args[])\n    {\n        Multi t1=new Multi();  \n        t1.start();  \n    }  \n}  ",
    "Write a Java program to count the number of characters in the given string by calling run method": "   import java.util.*;\n    public class Multi extends Thread\n    {  \n        Scanner sc=new Scanner(System.in);\n        \n    public void run()\n    {  \n        String sname=sc.nextLine();\n        int rollno = sc.nextInt();\n        System.out.println(\"Student Name: \" +sname);  \n         System.out.println(\"Roll No: \" +rollno);  \n    }  \n    public static void main(String args[]){  \n    Multi t1=new Multi();  \n    t1.start();  \n     }  \n    }  ",
    "Write a Java Program to perform cube value using static synchronization  concept  for the below Scenario": "class Table\n{\n    void cube(int n)\n    {\n        synchronized(this)\n        {\n            int temp = 1;\n            for(int i=1;i<=n;i++)\n            { \n                int j=i;\n                System.out.println(\"cube for range value \" +n+ \" \"+i+ \":\" + (j*j*j));\n                try\n                {  \n                    Thread.sleep(400);  \n                }\n                catch(Exception e)\n                {\n                    System.out.println(e);\n                }\n            }  \n        }\n    }  \n}",
    "Write a Java Program to perform multiplication table  for 5 & 100 using Synchronization method for the below Scenario": "  class Display {\n\n\tstatic synchronized void wish(String name) {\n\t\tfor (int i = 0; i <= 1; i++) {\n\t\t\tSystem.out.print(\"Welcome :: \");\n\t\t\ttry {\n\t\t\t\tThread.sleep(600);\n\t\t\t} catch (InterruptedException e) {\n\n\t\t\t}\n\t\t\tSystem.out.println(name);\n\t\t}\n\t}\n\n}",
    "Write a Java Program to perform factorial  value using static synchronization  concept  for the below Scenario": "class Table\n{\n    static synchronized void factorial(int n)\n    { \n        int fact=1;\n        if (n == 0)    \n            fact=1;    \n        else  \n        {\n            for(int i=1;i<=n;i++)\n            fact=fact*i;    \n        }   \n        System.out.println(\"Factorial for a number \" +n+ \" :\" + fact);\n        try\n        {  \n            Thread.sleep(400);  \n        }\n        catch(Exception e)\n        {\n            System.out.println(e);\n        }\n   }  \n}",
    "Write a Java Program to display Even number up to the range using Synchronization block for the below Scenario": "class Table\n{\n    void Even(int n)\n    {\n        synchronized(this)\n        {\n            int i=2;\n            System.out.print(\"List of Even numbers for \" +n+ \" : \");\n            while(i<=n)  \n            {\n                System.out.print(i +\" \");   \n                i=i+2;  \n            } \n            System.out.println();\n            try\n            {  \n                Thread.sleep(400);  \n            }\n            catch(Exception e)\n            {\n                System.out.println(e);\n            }\n        }\n    }  \n}",
    "Write a Java Program to perform multiplication table  for 5 & 7 using Synchronization block for the below Scenario": "class Table\n{\n    void printTable(int n)\n    {\n        synchronized(this)\n        {\n            for(int i=1;i<=10;i++)\n            {  \n                System.out.println(\"Multiplication Table for \" +n+\"*\" +i+ \" :\" +n*i);  \n                try\n                { \n                    Thread.sleep(400);  \n                }\n                catch(Exception e)\n                {\n                    System.out.println(e);\n                }\n            }\n        }\n    }  \n}",
    "Write a Java Program to perform square value using Synchronization block for the below Scenario": "class Table\n{\n    void square(int n)\n    {\n        synchronized(this)\n        {\n            int temp = 1;\n            for(int i=1;i<=n;i++)\n            { \n                int j=i;\n                System.out.println(\"square for range value \" +n+ \" \"+i+ \":\" + (j*j*j));\n                try\n                {  \n                    Thread.sleep(400);  \n                }\n                catch(Exception e)\n                {\n                    System.out.println(e);\n                }\n            }  \n        }\n    }  \n}",
    "Write a Java Program to perform static synchronization method for the below Scenario": "  class Table\n  {\n    void square(int n)\n    {\n      synchronized(this)\n     {//synchronized block  \n      int temp = 1;\n     for(int i=1;i<=n;i++)\n     { \n         int j=i;\n     System.out.println(\"square for range value \" +n+ \" \"+i+ \":\" + (j*j*j));\n     try\n     {  \n      Thread.sleep(400);  \n     }\n     catch(Exception e){System.out.println(e);}  \n     }  \n     }\n   }  \n  }",
    "Write a Java Program to display Even number up to the range using static Synchronization block for the below Scenario": " class Table\n  {\n    void cube(int n)\n     {\n      synchronized(this)\n      {\n          int temp = 1;\n         for(int i=1;i<=n;i++)\n         { \n             int j=i;\n         System.out.println(\"cube for range value \" +n+ \" \"+i+ \":\" + (j*j*j));\n         try\n         {  \n          Thread.sleep(400);  \n         }\n         catch(Exception e){System.out.println(e);}  \n         }  \n      }\n   }  \n  }\n     ",
    "Write a Java Program to perform cube value using Synchronization block for the below Scenario": "  class Table\n  {\n    void square(int n)\n    {\n      synchronized(this)\n     {//synchronized block  \n      int temp = 1;\n     for(int i=1;i<=n;i++)\n     { \n         int j=i;\n     System.out.println(\"square for range value \" +n+ \" \"+i+ \":\" + (j*j*j));\n     try\n     {  \n      Thread.sleep(400);  \n     }\n     catch(Exception e){System.out.println(e);}  \n     }  \n     }\n   }  \n  }",
    "Write a Java Program to perform Fibonacci series for static synchronization method for the below Scenario": "class Table\n{\n    void cube(int n)\n    {\n        synchronized(this)\n        {\n            int temp = 1;\n            for(int i=1;i<=n;i++)\n            { \n                int j=i;\n                System.out.println(\"cube for range value \" +n+ \" \"+i+ \":\" + (j*j*j));\n                try\n                {  \n                    Thread.sleep(400);  \n                }\n                catch(Exception e)\n                {\n                    System.out.println(e);\n                }\n            }  \n        }\n    }  \n}",
    "Write a Java Program to perform multiplication table  for 5 & 7 using Synchronization method for the below Scenario": "class Table\n{\n    static synchronized void fibonacci(int n)\n    {\n        int  firstTerm = 0, secondTerm = 1;\n        System.out.print(\"Fibonacci Series for \" + n + \" value:\");\n        \n        for (int i = 1; i <= n; ++i)\n        {\n            System.out.print(firstTerm + \", \");\n            int nextTerm = firstTerm + secondTerm;\n            firstTerm = secondTerm;\n            secondTerm = nextTerm; \n        }\n        System.out.println(\" \");\n        try\n        {  \n            Thread.sleep(400);  \n        }\n        catch(Exception e)\n        {\n            System.out.println(e);\n        }\n    }\n}",
    "Write a java program to display elements of one dimensional array and Passing two arrays and calling the method.": "public class main{\n    public static void main(String args[])\n    {\n        int[] a1={1,2,3,4,5};\n        int[] a2={2,4,6,8,10};\n        for (int i=0;i<a1.length;i++)\n        {\n            System.out.print((a1[i]+a2[i])+\" \");\n        }\n    }\n}",
    "Write a Java program to create Thread using Implements Runnable  .In run method get student name & rollno as input from the user and print inside the function": "import java.util.*;\npublic class Multi extends Thread\n{  \n    public void run()\n    {\n        Scanner sc=new Scanner(System.in);\n        String str=sc.nextLine();\n        System.out.println(\"Thread Name:\"+str);\n    }\n    public static void main(String args[])\n    {\n         Multi obj=new Multi();\n         obj.run();\n    }  \n}  "
}