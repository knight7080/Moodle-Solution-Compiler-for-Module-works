{
    "For example:": "import java.util.*;\npublic class Demo {\n    public static void main(String args[])\n    {\n        List<String> animals = new ArrayList<>();\n        Scanner sc=new Scanner(System.in);\n        for (int i=0;i<4;i++)\n        {\n            animals.add(sc.next());\n        }\n        System.out.println(animals);\n        animals.add(2, sc.next());\n        System.out.println(animals);\n    }\n}",
    "Create a two arraylist, first list add two words and then one word add in second arraylist.Finally display two arraylist elements in one arraylist.": "import java.util.*;  \n\npublic class Main {\n  public static void main(String[] args) {\n    ArrayList<String> cars = new ArrayList<String>();\n    Scanner sc=new Scanner(System.in);\n\n    for(int i=0;i<4;i++)\n    {\n     cars.add(sc.next());\n    }\n\n    \n    cars.add(3,sc.next());\n    \n    Collections.sort(cars); \n    for (String i : cars) {\n      System.out.println(i);\n    }\n  }\n}\n",
    "Create an arraylist and add any three elements and then update the three elements by 71,81,91 and then display the result using the set method.": "import java.util.*;\npublic class Demo{\n    public static void main(String args[])\n    {\n        ArrayList<String> elements = new ArrayList<String>();\n        Scanner sc=new Scanner(System.in);\n        for (int i=0;i<2;i++)\n        {\n            elements.add(sc.next());\n        }\n        System.out.println(\"ArrayList1 before addAll:\"+elements);\n        elements.add(2,sc.next());\n        System.out.println(\"ArrayList1 after addAll:\"+elements);\n    }\n}",
    "To traverse Array List elements using the Iterator interface using java collection.": "import java.util.*;\npublic class Demo{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        ArrayList<Integer> list = new ArrayList<Integer>();\n        int n=sc.nextInt();\n        for(int i=0;i<n;i++)\n        {\n            list.add(sc.nextInt());\n        }\n        \n        Iterator itr = list.iterator();\n        while (itr.hasNext())\n        {\n            System.out.println(itr.next());\n        }\n    }\n}",
    "To access an element from the array list,use the get() method of the ArrayList class based an index value and then display the corresponding value use java collection concepts.": "import java.util.*;\npublic class Main {\n    public static void main(String[] args) \n    {\n        ArrayList<Integer> al = new ArrayList<Integer>();\n        System.out.println(\"Is ArrayList Empty: \"+al.isEmpty());\n        // al.add;\n        al.add(88);\n        al.add(9);\n        al.add(17);\n        System.out.println(\"Is ArrayList Empty: \"+al.isEmpty());\n    }\n}",
    "Create an arraylist and add the 4 cars name and add 3rd position one more car name and then display in alphabetical order.": "import java.util.*;\npublic class Main {\n    public static void main(String[] args)\n    {\n        ArrayList<String> cars = new ArrayList<String>();\n        Scanner sc=new Scanner(System.in);\n        for(int i=0;i<4;i++)\n        {\n            cars.add(sc.next());\n        }\n        cars.add(3,sc.next());\n        \n        Collections.sort(cars); \n        \n        for (String i : cars)\n        {\n            System.out.println(i);\n        }\n    }\n}",
    "Note:": "import java.util.*;  \n\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc=new Scanner(System.in);\n        ArrayList<String> al = new ArrayList<String>();\n        int n=sc.nextInt();\n        for(int i=0;i<n;i++)\n        {\n        al.add(sc.next());\n        }\n        al.remove(0);\n        System.out.println(al);\n   }\n}\n",
    "Create an Array List and we have to replace element of it using Java Collection concepts.": "import java.util.*;\npublic class Demo{\n    public static void main(String args[])\n    {\n        ArrayList<Integer> arraylist = new ArrayList<Integer>();\n        arraylist.add(1);\n        arraylist.add(2);\n        arraylist.add(3);\n        \n        arraylist.set(0,71);\n        arraylist.set(1,81);\n        arraylist.set(2,91);\n        \n        System.out.println(arraylist);\n    }\n}",
    "Create an arraylist, add \u2018n\u2019 elements and remove 0th index elements and then display the arraylist.": "import java.util.*;  \n\npublic class Main {\n  public static void main(String[] args) {\n    ArrayList<String> cars = new ArrayList<String>();\n    Scanner sc=new Scanner(System.in);\n\n    for(int i=0;i<4;i++)\n    {\n     cars.add(sc.next());\n    }\n\n    \n    cars.add(3,sc.next());\n    \n    Collections.sort(cars); \n    for (String i : cars) {\n      System.out.println(i);\n    }\n  }\n}\n",
    " Check whether arraylist is empty or not using java collection.Without elements and with elements list result display.": "import java.util.*;\npublic class Demo {\n    public static void main(String args[])\n    {\n        List<String> elements = new ArrayList<>();\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        for (int i=0;i<n;i++)\n        {\n            elements.add(sc.next());\n        }\n        elements.remove(0);\n        System.out.println(elements);\n    }\n}",
    "Create a linkedlist, read size of the list , read the elements for the linkedlist and display the elements from the linkedlist.Apply the Collection Concepts in java.": "import java.util.*;\npublic class Main {\n    public static void main(String[] args)\n    {\n        Scanner sc=new Scanner(System.in);\n        LinkedList<String> elements = new LinkedList<String>();\n        int n=sc.nextInt();\n        for(int i=0;i<n;i++)\n        {\n            elements.add(sc.next());\n        }\n        System.out.println(elements);\n    }\n}",
    "Apply the contains method in linkedlist.Create a linkedlist and read the n elements for the linkedlist and display the elements from the linkedlist.Check whether \"Programming\" text contains or not.": "import java.util.*;\n\npublic class Main {\n  public static void main(String[] args) {\n   Scanner sc=new Scanner(System.in);\n    LinkedList<String> cars = new LinkedList<String>();\n    int n=sc.nextInt();\n    for(int i=0;i<n;i++)\n    {\n    cars.add(sc.next());\n    }\n    \n    System.out.println(cars);\n  }\n}\n",
    "Apply the Collection Concepts in java.Create a linkedlist, read size of the list , read the elements for the linkedlist and display the index 1 elements from the linkedlist.": "import java.util.*;\npublic class Main {\n    public static void main(String[] args)\n    {\n        Scanner sc=new Scanner(System.in);\n        LinkedList<String> elements = new LinkedList<String>();\n        int n=sc.nextInt();\n        for(int i=0;i<n;i++)\n        {\n            elements.add(sc.next());\n        }\n        System.out.println(\"Linked List 1:\"+elements);\n        System.out.println(\"Linked List 1 contains 'Programming' :\"+elements.contains(\"Programming\"));\n    }\n}",
    "Apply the remove method Concepts in java linkedlist and display the elements before and after applying remove methods from the linkedlist.To Create a linkedlist, read size of the list , read the elements for the linkedlist  and display it.": "import java.util.*;\n\npublic class Main {\n  public static void main(String[] args) {\n   Scanner sc=new Scanner(System.in);\n    LinkedList<String> llist1 = new LinkedList<String>();\n   \n    for(int i=0;i<3;i++)\n    {\n    llist1.add(sc.next());\n    }\n    \n    System.out.println(\"Linked List 1:\" + llist1);\n    LinkedList llist2 = new LinkedList();\n\n\n\n  llist2 = (LinkedList) llist1.clone();\n\n\n\n  System.out.println(\"Linked List 2:\" + llist2);\n  \n  }\n}\n",
    "To create the linkedlist , display the elements from the linkedlist and replace the one element from the created linkedlist.": "import java.util.*;\npublic class Main {\n    public static void main(String[] args)\n    {\n        Scanner sc=new Scanner(System.in);\n        LinkedList<String> elements = new LinkedList<String>();\n        int n=sc.nextInt();\n        for(int i=0;i<n;i++)\n        {\n            elements.add(sc.next());\n        }\n        System.out.println(elements);\n        System.out.println(\"Last Element :\"+elements.get(n-1));\n    }\n}",
    "Develop a java class with a method saveEvenNumbers(int N) using LinkedList to store even numbers from 2 to N, where N is a integer which is passed as a parameter to the method saveEvenNumbers().\nThe method should return the LinkedList (A1) created. In the same class create a method printEvenNumbers()which iterates through the LinkedList A1 in step 1, and It should multiply each number with 2 and display it in format 4,8,12\u2026.2*N. and add these numbers in a new LinkedList (A2). The new LinkedList (A2) created needs to be returned. Create a method printEvenNumber(int N) parameter is a number N. This method should search the LinkedList (A1) for the existence of the number \u2018N\u2019 passed. If exists it should return the Number else return zero.Hint: Use instance variable for storing the LinkedList A1 and A2. NOTE: You can test the methods using a main method.": "import java.util.*;\npublic class Main {\n\t\n\tprivate LinkedList<Integer> list = new LinkedList<Integer>();\n\tpublic LinkedList<Integer> saveEvenNumbers(int N)\n\t{\n\t\tlist = new LinkedList<Integer>();\n\t\tfor (int i = 2; i <= N; i++)\n\t\t{\n\t\t\tif (i % 2 == 0) list.add(i);\n\t\t}\n\t\treturn list;\n\t}\n\tpublic LinkedList<Integer> printEvenNumbers()\n\t{\n\t\tLinkedList<Integer> newList = new LinkedList<Integer>();\n\t\tfor (int item : list)\n\t\t{\n\t\t\tnewList.add(item * 2);\n\t\t\tSystem.out.println(item * 2);\n\t\t}\n\t\treturn newList;\n\t}\n\tpublic static void main(String[] args)\n\t{\n\t\tMain asg = new Main();\n\t\tScanner sc=new Scanner(System.in);\n\t\tint N=sc.nextInt();\n\t\tasg.saveEvenNumbers(N);\n\t\tasg.printEvenNumbers();\n\t}\n\n}",
    "Create a linkedlist and read the 3 elements for the linkedlist and display the elements from the linkedlist.Apply the clone method in linkedlist.": "import java.util.*;\npublic class Main {\n\tprivate LinkedList<Integer> list = new LinkedList<Integer>();\n\t\n\tpublic LinkedList<Integer> saveEvenNumbers(int N) {\n\t\tlist = new LinkedList<Integer>();\n\t\t\n\t\tfor (int i = 2; i <= N; i++) {\n\t\t\tif (i % 2 == 0) list.add(i);\n\t\t}\n\t\t\n\t\treturn list;\n\t}\n\t\n\tpublic LinkedList<Integer> printEvenNumbers() {\n\t\tLinkedList<Integer> newList = new LinkedList<Integer>();\n\t\t\n\t\tfor (int item : list) {\n\t\t\tnewList.add(item * 2);\n\t\t\tSystem.out.println(item * 2);\n\t\t}\n\t\t\n\t\treturn newList;\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tMain asg = new Main();\n\t\tScanner sc=new Scanner(System.in);\n\t\tint N=sc.nextInt();\n\t\tasg.saveEvenNumbers(N);\n\t\tasg.printEvenNumbers();\n\t\t\n\n\t}\n\n}",
    "Apply the getLast() method in LinkedList java concepts.Create a linkedlist, read size of the list , read the elements for the linkedlist and display the whole list of the elemnts and last index of the element from the linkedlist.": "import java.util.*;\npublic class Main {\n    public static void main(String[] args)\n    {\n        Scanner sc=new Scanner(System.in);\n        LinkedList<String> list1 = new LinkedList<String>();\n        for(int i=0;i<3;i++)\n        {\n            list1.add(sc.next());\n        }\n        System.out.println(\"Linked List 1:\"+list1);\n        LinkedList list2 = new LinkedList();\n        list2 = (LinkedList) list1.clone();\n        System.out.println(\"Linked List 2:\"+list2);\n    }\n}",
    "Create a List interface implemented by arraylist class , adding n elements to object of List interface and print all the elements inside the List interface object.": "import java.util.*;\npublic class Main {\n    public static void main(String args[])\n    {\n        List<String> a = new ArrayList<String>();\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        for(int i=0;i<n;i++)\n        {\n            a.add(sc.next());   \n        }\n        System.out.println(a);\n    }\n}",
    "Create a List interface implemented by arraylist class , adding n elements to object of List interface and print all the elements inside the List interface object and apply addall() method appends all of the elements in the specified collection to the end of this list.": "import java.util.*;\npublic class Demo{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        List<Integer> n1=new ArrayList<Integer>();\n        int n=sc.nextInt();\n        for (int i=0;i<n;i++)\n        {\n            n1.add(sc.nextInt());\n        }\n        System.out.println(n1);\n        int[] array={100,200,300};\n        List<Integer> n2=new ArrayList<Integer>();\n        for (int i: array)\n            n2.add(i);\n        System.out.println(n2);\n        n1.addAll(n2);\n        System.out.println(n1);\n    }\n}",
    "Create a List interface implemented by two Linkedlist class , adding n elements to object of two List interface and print all the elements inside the List interface object.Check the two lists are equal or not.": "import java.util.*;\npublic class Demo{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        List<String> n1=new ArrayList<String>();\n        int s1=sc.nextInt();\n        for (int i=0;i<s1;i++)\n        {\n            n1.add(sc.next());\n        }\n        System.out.println(n1);\n        \n        List<String> n2=new ArrayList<String>();\n        int s2=sc.nextInt();\n        for (int i=0;i<s2;i++)\n        {\n            n2.add(sc.next());\n        }\n        System.out.println(n2);\n        if (n1.equals(n2))\n            System.out.println(\"Equal\");\n        else\n            System.out.println(\"Not equal\");\n    }\n}",
    "Create a List interface implemented by arraylist class , adding n elements to object of List interface and print all the elements inside the List interface object,use lastIndexOf() method returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element and display the element from the list.": "import java.util.*;\npublic class GfG {\n\tpublic static void main(String[] args)\n\t{\n\t    Scanner sc=new Scanner(System.in);\n\t\tList<Integer> l = new LinkedList<>();\n\t\tfor(int i=0;i<5;i++){\n\t\tl.add(sc.nextInt());\n\t\t}\n\t\tSystem.out.println(l);\n\n\t\tint hash = l.hashCode();\n\n\t\tSystem.out.println(hash);\n\t}\n}\n",
    "Write a Java program to sort a given array list.": "import java.util.*;\npublic class GFG {\n\tpublic static void main(String args[])\n\t{\n\t\tScanner sc=new Scanner(System.in);\n\t\tList<String> al = new ArrayList<>();\n        int size=sc.nextInt();\n        for(int i=0;i<size;i++)\n        {\n\t\t\tal.add(sc.next());\n        }\n\t\tSystem.out.println(\"Initial List:\" + al);\n\t\tal.remove(\"for\");\n\t\tSystem.out.println(\"Final List:\" + al);\n\t\tal.clear();\n\t\tSystem.out.println(\"All Remove Elements from the final List:\"+al);\n\t}\n}\n",
    "Write a program to store a group of employee names into a HashSet, retrieve the elements one by one using an Iterator.": "import java.util.*;\npublic class Demo{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        Set<String> elements=new HashSet<String>();\n        int n=sc.nextInt();\n        for (int i=0;i<n;i++)\n        {\n            elements.add(sc.next());\n        }\n        System.out.println(\"HashSet Elements: \"+elements);\n        System.out.println(\"Is the set empty: \"+elements.isEmpty());\n        elements.clear();\n        System.out.println(\"Is the set empty: \"+elements.isEmpty());\n    }\n}",
    "Create a List interface implemented by two arraylist class , adding n elements to object of two List interface and print all the elements inside the List interface object.Check the two lists are equal or not.": "import java.util.*;\n\npublic class HashSetDemo{\n\npublic static void main(String args[]){\n\nHashSet <String> hs = new HashSet <String>();\nScanner sc=new Scanner(System.in);\nint n=sc.nextInt();\nfor(int i=0;i<n;i++)\n{\n    \nhs.add(sc.next());\n\n}\n\nIterator<String> it = hs.iterator();\n\t\twhile (it.hasNext())\n\t\t\tSystem.out.println(it.next());\n}\n}",
    "Create a List interface implemented by array list class , adding n elements to object of List interface and print all the elements inside the List interface object,  remove given \"for\" object value  and then display the final list.": "import java.util.*;\npublic class Demo{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        List<String> n1=new ArrayList<String>();\n        int s1=sc.nextInt();\n        for (int i=0;i<s1;i++)\n        {\n            n1.add(sc.next());\n        }\n        System.out.println(n1);\n        \n        List<String> n2=new ArrayList<String>();\n        int s2=sc.nextInt();\n        for (int i=0;i<s2;i++)\n        {\n            n2.add(sc.next());\n        }\n        System.out.println(n2);\n        if (n1.equals(n2))\n            System.out.println(\"Equal\");\n        else\n            System.out.println(\"Not equal\");\n    }\n}",
    "Write a Java program of swap two elements in a list. Swapping 1st(index 0) element with the 3rd(index 2) element.": "import java.util.*;\npublic class GFG {\n\tpublic static void main(String args[])\n\t{\n\t\tScanner sc=new Scanner(System.in);\n\t\tList<String> al = new ArrayList<>();\n        int size=sc.nextInt();\n        for(int i=0;i<size;i++)\n        {\n\t\t\tal.add(sc.next());\n        }\n\t\tSystem.out.println(\"Initial List:\" + al);\n\t\tal.remove(\"for\");\n\t\tSystem.out.println(\"Final List:\" + al);\n\t}\n}\n",
    "Create a List interface implemented by arraylist class , adding n elements to object of List interface , insert new string in index position 1 and print all the elements inside the List interface object.": "import java.util.*;\npublic class Main {\n    public static void main(String args[])\n    {\n        List<String> a = new ArrayList<String>();\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        for(int i=0;i<n;i++)\n        {\n            a.add(sc.next());   \n        }\n        a.add(1,sc.next());\n        System.out.println(a);\n    }\n}",
    "Implement the hashcode in list interface.Create a list and read 5 elements and display the 5 elements , hashcode for the list.": "import java.util.*;\n\n\npublic class GFG {\n\n\tpublic static void main(String args[])\n\t{\n\t\tScanner sc=new Scanner(System.in);\n\t\tList<String> al = new ArrayList<>();\n        int size=sc.nextInt();\n        for(int i=0;i<size;i++)\n        {\n\t\t\t\tal.add(sc.next());\n        }\n        al.add(1,sc.next());\n\t\t\n\t\tSystem.out.println(al);\n\t}\n}\n",
    "Create a List interface implemented by array list class , adding n elements to object of List interface and print all the elements inside the List interface object,  remove given \"for\" object value , display list and then remove all element from the list and display all remove elements.": "import java.util.*;\npublic class GfG {\n\tpublic static void main(String[] args)\n\t{\n\t    Scanner sc=new Scanner(System.in);\n\t\tList<Integer> l = new LinkedList<>();\n\t\tfor(int i=0;i<5;i++)\n\t\t{\n\t\t    l.add(sc.nextInt());\n\t\t}\n\t\tSystem.out.println(l);\n\n\t\tint hash = l.hashCode();\n\n\t\tSystem.out.println(hash);\n\t}\n}",
    "Write a program to store a group of employee names into a LinkedHashSet, retrieve the elements one by one using an Iterator.": "import java.util.*;\npublic class Demo{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        LinkedHashSet<String> elements=new LinkedHashSet<String>();\n        int n=sc.nextInt();\n        for (int i=0;i<n;i++)\n        {\n            elements.add(sc.next());\n        }\n        Iterator i = elements.iterator();\n        while (i.hasNext())\n        {\n            System.out.println(i.next());\n        }\n    }\n}",
    "Write a java program to check wheather HashSet contains an element or not. It returns true if the set contains element, otherwise returns false.Apply clear method.": "import java.util.*;\n\npublic class HashSetDemo{\n\npublic static void main(String args[]){\n\nLinkedHashSet <String> hs = new LinkedHashSet <String>();\nScanner sc=new Scanner(System.in);\nint n=sc.nextInt();\nfor(int i=0;i<n;i++)\n{\n    \nhs.add(sc.next());\n\n}\n\nIterator<String> it = hs.iterator();\n\t\twhile (it.hasNext())\n\t\t\tSystem.out.println(it.next());\n}\n}",
    " Check whether LinkedHashSet is empty or not using java collection.Without elements and with elements list result display.": "import java.util.*;  \npublic class HashSetRemoveExample1 {  \n    public static void main(String[] args) {  \n        HashSet<String> hset=new HashSet<String>();  \n        Scanner sc=new Scanner(System.in);\n        int size=sc.nextInt();\n        for(int i=0;i<size;i++)\n        {\n          hset.add(sc.next());       \n        }\n       \n         \n        \n            System.out.println(\"HashSet Elements: \"+hset);   \n       \n            System.out.println(\"Is the set empty: \"+hset.isEmpty());  \n            hset.clear();  \n            System.out.println(\"Is the set empty: \"+hset.isEmpty());  \n    }  \n}  ",
    "Create a java program use Linkedhashset concepts in collection and add the elements to the Linkedhashset and then display it.": "import java.util.*;\npublic class Demo{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        Set<String> elements=new HashSet<String>();\n        int n=sc.nextInt();\n        for (int i=0;i<n;i++)\n        {\n            elements.add(sc.next());\n        }\n        Iterator i = elements.iterator();\n        while (i.hasNext())\n        {\n            System.out.println(i.next());\n        }\n    }\n}",
    "Write a java program use hashset concepts in collection and add the elements to the hashset and then display the elements iterate(use while)and ignore the duplicate elements in hashset.": "import java.util.*;\npublic class Demo{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        Set<String> elements=new HashSet<String>();\n        int n=sc.nextInt();\n        for (int i=0;i<n;i++)\n        {\n            elements.add(sc.next());\n        }\n        Iterator i = elements.iterator();\n        while (i.hasNext())\n        {\n            System.out.println(i.next());\n        }\n    }\n}",
    "Create a java program use hashset concepts in collection and add the elements to the hashset and then display it.": "import java.util.*;\n\npublic class HashSetDemo{\n\npublic static void main(String args[]){\n\nHashSet <String> hs = new HashSet <String>();\nScanner sc=new Scanner(System.in);\nint n=sc.nextInt();\nfor(int i=0;i<n;i++)\n{\n    \nhs.add(sc.next());\n\n}\n Iterator<String> i=hs.iterator();  \n while(i.hasNext())  \n {  \n    System.out.println(i.next());  \n }  \n\n}\n}",
    "To create the linkedhashset , display the elements from the linkedhashset and display the size of the linkedhashset.": "import java.util.*;\npublic class Demo{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        Set<String> names=new HashSet<String>();\n        int n=sc.nextInt();\n        for (int i=0;i<n;i++)\n        {\n            names.add(sc.next());\n        }\n        System.out.println(\"Values in HashSet object: \"+names);\n    }\n}",
    "Write a java program use Linkedhashset concepts in collection and add the elements to the Linkedhashset and then display the elements iterate(use while).": "import java.util.*;\n\npublic class HashSetDemo{\n\npublic static void main(String args[]){\n\nHashSet <String> hs = new HashSet <String>();\nScanner sc=new Scanner(System.in);\nint n=sc.nextInt();\nfor(int i=0;i<n;i++)\n{\n    \nhs.add(sc.next());\n\n}\n\nSystem.out.println(\"Values in HashSet object: \"+ hs);\n}\n}",
    "Apply the LinkedHashSet concepts.Write a java program to read n elements and display the n elements, after remove one elements from the Linkedhashset(\"Ravi\") and then display the elements.": "import java.util.*;\npublic class Demo{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        LinkedHashSet<String> names=new LinkedHashSet<String>();\n        int n=sc.nextInt();\n        for (int i=0;i<n;i++)\n        {\n            names.add(sc.next());\n        }\n        System.out.println(\"Linked HashSet :\"+names);\n        System.out.println(\"Linked HashSet size:\"+names.size());\n    }\n}",
    "Apply the get() method in java linkedlist.To Create a linkedlist, read size of the list , read the elements for the linkedlist and display the elements from the linkedlist for specific position element.": "import java.util.*;\npublic class Demo{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        LinkedList<String> list=new LinkedList<String>();\n        int n=sc.nextInt();\n        for (int i=0;i<n;i++)\n        {\n            list.add(sc.next());\n        }\n        System.out.println(\"Element at index 1: \"+list.get(1));\n    }\n}",
    "Write a Java program to extract a portion of a list. index value from 1 to 3.": "import java.util.*;\npublic class Demo{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        ArrayList<String> list1=new ArrayList<String>();\n        int n=sc.nextInt();\n        for (int i=0;i<n;i++)\n        {\n            list1.add(sc.next());\n        }\n        System.out.println(\"Original list: \"+list1);\n        ArrayList<String> list2=new ArrayList<String>();\n        list2.add(list1.get(1));\n        list2.add(list1.get(2));\n        System.out.println(\"Index of 1 to 3 elements print: \"+list2);\n    }\n}",
    "Create a List interface implemented by arraylist class , adding n elements to object of List interface and print all the elements inside the List interface object.Apply the iterator in list using for loop for iteration.Check list contains \"Programming\" text or not.": "import java.util.*;\npublic class Demo{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        ArrayList<String> list=new ArrayList<String>();\n        int n=sc.nextInt();\n        for (int i=0;i<n;i++)\n        {\n            list.add(sc.next());\n        }\n        for (String i:list)\n            System.out.println(i);\n        System.out.println(\"List contains Programming or not:\"+list.contains(\"programming\"));\n    }\n}",
    "using Function to print upto N Fibonacci Number in java.": "import java.util.*;\npublic class Main{\n    static void Fibo(int n)\n    {\n        int n1=0,n2=1,n3;\n        System.out.print(n1+\" \"+n2);\n        for (int i=2;i<n;i++)\n        {\n            n3=n1+n2;\n            System.out.print(\" \"+n3);\n            n1=n2;\n            n2=n3;\n        }\n    }\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        Fibo(n);\n    }\n}",
    " Check whether arraylist is empty or not using java collection.If list is empty display true otherwise display false.": "import java.util.*;\npublic class Demo{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        ArrayList<String> list=new ArrayList<String>();\n        int n=sc.nextInt();\n        System.out.println(\"Is ArrayList Empty: \"+list.isEmpty());\n        for (int i=0;i<n;i++)\n        {\n            list.add(sc.next());\n        }\n        System.out.println(\"Is ArrayList Empty: \"+list.isEmpty());\n    }\n}"
}